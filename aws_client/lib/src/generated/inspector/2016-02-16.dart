// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_local_variable
// ignore_for_file: unused_shown_name

import 'dart:convert';
import 'dart:typed_data';

import '../../shared/shared.dart' as _s;
import '../../shared/shared.dart'
    show
        Uint8ListConverter,
        Uint8ListListConverter,
        rfc822ToJson,
        iso8601ToJson,
        unixTimestampToJson,
        timeStampFromJson,
        RfcDateTimeConverter,
        IsoDateTimeConverter,
        UnixDateTimeConverter,
        StringJsonConverter,
        Base64JsonConverter;

export '../../shared/shared.dart' show AwsClientCredentials;

part '2016-02-16.g.dart';

/// Amazon Inspector enables you to analyze the behavior of your AWS resources
/// and to identify potential security issues. For more information, see <a
/// href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html">
/// Amazon Inspector User Guide</a>.
class Inspector {
  final _s.JsonProtocol _protocol;
  Inspector({
    @_s.required String region,
    _s.AwsClientCredentials credentials,
    _s.Client client,
    String endpointUrl,
  }) : _protocol = _s.JsonProtocol(
          client: client,
          service: _s.ServiceMetadata(
            endpointPrefix: 'inspector',
          ),
          region: region,
          credentials: credentials,
          endpointUrl: endpointUrl,
        );

  /// Assigns attributes (key and value pairs) to the findings that are
  /// specified by the ARNs of the findings.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  /// May throw [ServiceTemporarilyUnavailableException].
  ///
  /// Parameter [attributes] :
  /// The array of attributes that you want to assign to specified findings.
  ///
  /// Parameter [findingArns] :
  /// The ARNs that specify the findings that you want to assign attributes to.
  Future<AddAttributesToFindingsResponse> addAttributesToFindings({
    @_s.required List<Attribute> attributes,
    @_s.required List<String> findingArns,
  }) async {
    ArgumentError.checkNotNull(attributes, 'attributes');
    ArgumentError.checkNotNull(findingArns, 'findingArns');
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.AddAttributesToFindings'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'attributes': attributes,
        'findingArns': findingArns,
      },
    );

    return AddAttributesToFindingsResponse.fromJson(jsonResponse.body);
  }

  /// Creates a new assessment target using the ARN of the resource group that
  /// is generated by <a>CreateResourceGroup</a>. If resourceGroupArn is not
  /// specified, all EC2 instances in the current AWS account and region are
  /// included in the assessment target. If the <a
  /// href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_slr.html">service-linked
  /// role</a> isn’t already registered, this action also creates and registers
  /// a service-linked role to grant Amazon Inspector access to AWS Services
  /// needed to perform security assessments. You can create up to 50 assessment
  /// targets per AWS account. You can run up to 500 concurrent agents per AWS
  /// account. For more information, see <a
  /// href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_applications.html">
  /// Amazon Inspector Assessment Targets</a>.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [LimitExceededException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  /// May throw [InvalidCrossAccountRoleException].
  /// May throw [ServiceTemporarilyUnavailableException].
  ///
  /// Parameter [assessmentTargetName] :
  /// The user-defined name that identifies the assessment target that you want
  /// to create. The name must be unique within the AWS account.
  ///
  /// Parameter [resourceGroupArn] :
  /// The ARN that specifies the resource group that is used to create the
  /// assessment target. If resourceGroupArn is not specified, all EC2 instances
  /// in the current AWS account and region are included in the assessment
  /// target.
  Future<CreateAssessmentTargetResponse> createAssessmentTarget({
    @_s.required String assessmentTargetName,
    String resourceGroupArn,
  }) async {
    ArgumentError.checkNotNull(assessmentTargetName, 'assessmentTargetName');
    _s.validateStringLength(
      'assessmentTargetName',
      assessmentTargetName,
      1,
      140,
      isRequired: true,
    );
    _s.validateStringLength(
      'resourceGroupArn',
      resourceGroupArn,
      1,
      300,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.CreateAssessmentTarget'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'assessmentTargetName': assessmentTargetName,
        if (resourceGroupArn != null) 'resourceGroupArn': resourceGroupArn,
      },
    );

    return CreateAssessmentTargetResponse.fromJson(jsonResponse.body);
  }

  /// Creates an assessment template for the assessment target that is specified
  /// by the ARN of the assessment target. If the <a
  /// href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_slr.html">service-linked
  /// role</a> isn’t already registered, this action also creates and registers
  /// a service-linked role to grant Amazon Inspector access to AWS Services
  /// needed to perform security assessments.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [LimitExceededException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  /// May throw [ServiceTemporarilyUnavailableException].
  ///
  /// Parameter [assessmentTargetArn] :
  /// The ARN that specifies the assessment target for which you want to create
  /// the assessment template.
  ///
  /// Parameter [assessmentTemplateName] :
  /// The user-defined name that identifies the assessment template that you
  /// want to create. You can create several assessment templates for an
  /// assessment target. The names of the assessment templates that correspond
  /// to a particular assessment target must be unique.
  ///
  /// Parameter [durationInSeconds] :
  /// The duration of the assessment run in seconds.
  ///
  /// Parameter [rulesPackageArns] :
  /// The ARNs that specify the rules packages that you want to attach to the
  /// assessment template.
  ///
  /// Parameter [userAttributesForFindings] :
  /// The user-defined attributes that are assigned to every finding that is
  /// generated by the assessment run that uses this assessment template. An
  /// attribute is a key and value pair (an <a>Attribute</a> object). Within an
  /// assessment template, each key must be unique.
  Future<CreateAssessmentTemplateResponse> createAssessmentTemplate({
    @_s.required String assessmentTargetArn,
    @_s.required String assessmentTemplateName,
    @_s.required int durationInSeconds,
    @_s.required List<String> rulesPackageArns,
    List<Attribute> userAttributesForFindings,
  }) async {
    ArgumentError.checkNotNull(assessmentTargetArn, 'assessmentTargetArn');
    _s.validateStringLength(
      'assessmentTargetArn',
      assessmentTargetArn,
      1,
      300,
      isRequired: true,
    );
    ArgumentError.checkNotNull(
        assessmentTemplateName, 'assessmentTemplateName');
    _s.validateStringLength(
      'assessmentTemplateName',
      assessmentTemplateName,
      1,
      140,
      isRequired: true,
    );
    ArgumentError.checkNotNull(durationInSeconds, 'durationInSeconds');
    _s.validateNumRange(
      'durationInSeconds',
      durationInSeconds,
      180,
      86400,
      isRequired: true,
    );
    ArgumentError.checkNotNull(rulesPackageArns, 'rulesPackageArns');
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.CreateAssessmentTemplate'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'assessmentTargetArn': assessmentTargetArn,
        'assessmentTemplateName': assessmentTemplateName,
        'durationInSeconds': durationInSeconds,
        'rulesPackageArns': rulesPackageArns,
        if (userAttributesForFindings != null)
          'userAttributesForFindings': userAttributesForFindings,
      },
    );

    return CreateAssessmentTemplateResponse.fromJson(jsonResponse.body);
  }

  /// Starts the generation of an exclusions preview for the specified
  /// assessment template. The exclusions preview lists the potential exclusions
  /// (ExclusionPreview) that Inspector can detect before it runs the
  /// assessment.
  ///
  /// May throw [InvalidInputException].
  /// May throw [PreviewGenerationInProgressException].
  /// May throw [InternalException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  /// May throw [ServiceTemporarilyUnavailableException].
  ///
  /// Parameter [assessmentTemplateArn] :
  /// The ARN that specifies the assessment template for which you want to
  /// create an exclusions preview.
  Future<CreateExclusionsPreviewResponse> createExclusionsPreview({
    @_s.required String assessmentTemplateArn,
  }) async {
    ArgumentError.checkNotNull(assessmentTemplateArn, 'assessmentTemplateArn');
    _s.validateStringLength(
      'assessmentTemplateArn',
      assessmentTemplateArn,
      1,
      300,
      isRequired: true,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.CreateExclusionsPreview'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'assessmentTemplateArn': assessmentTemplateArn,
      },
    );

    return CreateExclusionsPreviewResponse.fromJson(jsonResponse.body);
  }

  /// Creates a resource group using the specified set of tags (key and value
  /// pairs) that are used to select the EC2 instances to be included in an
  /// Amazon Inspector assessment target. The created resource group is then
  /// used to create an Amazon Inspector assessment target. For more
  /// information, see <a>CreateAssessmentTarget</a>.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [LimitExceededException].
  /// May throw [AccessDeniedException].
  /// May throw [ServiceTemporarilyUnavailableException].
  ///
  /// Parameter [resourceGroupTags] :
  /// A collection of keys and an array of possible values,
  /// '[{"key":"key1","values":["Value1","Value2"]},{"key":"Key2","values":["Value3"]}]'.
  ///
  /// For example,'[{"key":"Name","values":["TestEC2Instance"]}]'.
  Future<CreateResourceGroupResponse> createResourceGroup({
    @_s.required List<ResourceGroupTag> resourceGroupTags,
  }) async {
    ArgumentError.checkNotNull(resourceGroupTags, 'resourceGroupTags');
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.CreateResourceGroup'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'resourceGroupTags': resourceGroupTags,
      },
    );

    return CreateResourceGroupResponse.fromJson(jsonResponse.body);
  }

  /// Deletes the assessment run that is specified by the ARN of the assessment
  /// run.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AssessmentRunInProgressException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  /// May throw [ServiceTemporarilyUnavailableException].
  ///
  /// Parameter [assessmentRunArn] :
  /// The ARN that specifies the assessment run that you want to delete.
  Future<void> deleteAssessmentRun({
    @_s.required String assessmentRunArn,
  }) async {
    ArgumentError.checkNotNull(assessmentRunArn, 'assessmentRunArn');
    _s.validateStringLength(
      'assessmentRunArn',
      assessmentRunArn,
      1,
      300,
      isRequired: true,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.DeleteAssessmentRun'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'assessmentRunArn': assessmentRunArn,
      },
    );
  }

  /// Deletes the assessment target that is specified by the ARN of the
  /// assessment target.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AssessmentRunInProgressException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  /// May throw [ServiceTemporarilyUnavailableException].
  ///
  /// Parameter [assessmentTargetArn] :
  /// The ARN that specifies the assessment target that you want to delete.
  Future<void> deleteAssessmentTarget({
    @_s.required String assessmentTargetArn,
  }) async {
    ArgumentError.checkNotNull(assessmentTargetArn, 'assessmentTargetArn');
    _s.validateStringLength(
      'assessmentTargetArn',
      assessmentTargetArn,
      1,
      300,
      isRequired: true,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.DeleteAssessmentTarget'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'assessmentTargetArn': assessmentTargetArn,
      },
    );
  }

  /// Deletes the assessment template that is specified by the ARN of the
  /// assessment template.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AssessmentRunInProgressException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  /// May throw [ServiceTemporarilyUnavailableException].
  ///
  /// Parameter [assessmentTemplateArn] :
  /// The ARN that specifies the assessment template that you want to delete.
  Future<void> deleteAssessmentTemplate({
    @_s.required String assessmentTemplateArn,
  }) async {
    ArgumentError.checkNotNull(assessmentTemplateArn, 'assessmentTemplateArn');
    _s.validateStringLength(
      'assessmentTemplateArn',
      assessmentTemplateArn,
      1,
      300,
      isRequired: true,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.DeleteAssessmentTemplate'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'assessmentTemplateArn': assessmentTemplateArn,
      },
    );
  }

  /// Describes the assessment runs that are specified by the ARNs of the
  /// assessment runs.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  ///
  /// Parameter [assessmentRunArns] :
  /// The ARN that specifies the assessment run that you want to describe.
  Future<DescribeAssessmentRunsResponse> describeAssessmentRuns({
    @_s.required List<String> assessmentRunArns,
  }) async {
    ArgumentError.checkNotNull(assessmentRunArns, 'assessmentRunArns');
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.DescribeAssessmentRuns'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'assessmentRunArns': assessmentRunArns,
      },
    );

    return DescribeAssessmentRunsResponse.fromJson(jsonResponse.body);
  }

  /// Describes the assessment targets that are specified by the ARNs of the
  /// assessment targets.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  ///
  /// Parameter [assessmentTargetArns] :
  /// The ARNs that specifies the assessment targets that you want to describe.
  Future<DescribeAssessmentTargetsResponse> describeAssessmentTargets({
    @_s.required List<String> assessmentTargetArns,
  }) async {
    ArgumentError.checkNotNull(assessmentTargetArns, 'assessmentTargetArns');
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.DescribeAssessmentTargets'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'assessmentTargetArns': assessmentTargetArns,
      },
    );

    return DescribeAssessmentTargetsResponse.fromJson(jsonResponse.body);
  }

  /// Describes the assessment templates that are specified by the ARNs of the
  /// assessment templates.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  Future<DescribeAssessmentTemplatesResponse> describeAssessmentTemplates({
    @_s.required List<String> assessmentTemplateArns,
  }) async {
    ArgumentError.checkNotNull(
        assessmentTemplateArns, 'assessmentTemplateArns');
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.DescribeAssessmentTemplates'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'assessmentTemplateArns': assessmentTemplateArns,
      },
    );

    return DescribeAssessmentTemplatesResponse.fromJson(jsonResponse.body);
  }

  /// Describes the IAM role that enables Amazon Inspector to access your AWS
  /// account.
  ///
  /// May throw [InternalException].
  Future<DescribeCrossAccountAccessRoleResponse>
      describeCrossAccountAccessRole() async {
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.DescribeCrossAccountAccessRole'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
    );

    return DescribeCrossAccountAccessRoleResponse.fromJson(jsonResponse.body);
  }

  /// Describes the exclusions that are specified by the exclusions' ARNs.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  ///
  /// Parameter [exclusionArns] :
  /// The list of ARNs that specify the exclusions that you want to describe.
  ///
  /// Parameter [locale] :
  /// The locale into which you want to translate the exclusion's title,
  /// description, and recommendation.
  Future<DescribeExclusionsResponse> describeExclusions({
    @_s.required List<String> exclusionArns,
    Locale locale,
  }) async {
    ArgumentError.checkNotNull(exclusionArns, 'exclusionArns');
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.DescribeExclusions'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'exclusionArns': exclusionArns,
        if (locale != null) 'locale': locale.toValue(),
      },
    );

    return DescribeExclusionsResponse.fromJson(jsonResponse.body);
  }

  /// Describes the findings that are specified by the ARNs of the findings.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  ///
  /// Parameter [findingArns] :
  /// The ARN that specifies the finding that you want to describe.
  ///
  /// Parameter [locale] :
  /// The locale into which you want to translate a finding description,
  /// recommendation, and the short description that identifies the finding.
  Future<DescribeFindingsResponse> describeFindings({
    @_s.required List<String> findingArns,
    Locale locale,
  }) async {
    ArgumentError.checkNotNull(findingArns, 'findingArns');
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.DescribeFindings'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'findingArns': findingArns,
        if (locale != null) 'locale': locale.toValue(),
      },
    );

    return DescribeFindingsResponse.fromJson(jsonResponse.body);
  }

  /// Describes the resource groups that are specified by the ARNs of the
  /// resource groups.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  ///
  /// Parameter [resourceGroupArns] :
  /// The ARN that specifies the resource group that you want to describe.
  Future<DescribeResourceGroupsResponse> describeResourceGroups({
    @_s.required List<String> resourceGroupArns,
  }) async {
    ArgumentError.checkNotNull(resourceGroupArns, 'resourceGroupArns');
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.DescribeResourceGroups'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'resourceGroupArns': resourceGroupArns,
      },
    );

    return DescribeResourceGroupsResponse.fromJson(jsonResponse.body);
  }

  /// Describes the rules packages that are specified by the ARNs of the rules
  /// packages.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  ///
  /// Parameter [rulesPackageArns] :
  /// The ARN that specifies the rules package that you want to describe.
  ///
  /// Parameter [locale] :
  /// The locale that you want to translate a rules package description into.
  Future<DescribeRulesPackagesResponse> describeRulesPackages({
    @_s.required List<String> rulesPackageArns,
    Locale locale,
  }) async {
    ArgumentError.checkNotNull(rulesPackageArns, 'rulesPackageArns');
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.DescribeRulesPackages'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'rulesPackageArns': rulesPackageArns,
        if (locale != null) 'locale': locale.toValue(),
      },
    );

    return DescribeRulesPackagesResponse.fromJson(jsonResponse.body);
  }

  /// Produces an assessment report that includes detailed and comprehensive
  /// results of a specified assessment run.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  /// May throw [AssessmentRunInProgressException].
  /// May throw [UnsupportedFeatureException].
  /// May throw [ServiceTemporarilyUnavailableException].
  ///
  /// Parameter [assessmentRunArn] :
  /// The ARN that specifies the assessment run for which you want to generate a
  /// report.
  ///
  /// Parameter [reportFileFormat] :
  /// Specifies the file format (html or pdf) of the assessment report that you
  /// want to generate.
  ///
  /// Parameter [reportType] :
  /// Specifies the type of the assessment report that you want to generate.
  /// There are two types of assessment reports: a finding report and a full
  /// report. For more information, see <a
  /// href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_reports.html">Assessment
  /// Reports</a>.
  Future<GetAssessmentReportResponse> getAssessmentReport({
    @_s.required String assessmentRunArn,
    @_s.required ReportFileFormat reportFileFormat,
    @_s.required ReportType reportType,
  }) async {
    ArgumentError.checkNotNull(assessmentRunArn, 'assessmentRunArn');
    _s.validateStringLength(
      'assessmentRunArn',
      assessmentRunArn,
      1,
      300,
      isRequired: true,
    );
    ArgumentError.checkNotNull(reportFileFormat, 'reportFileFormat');
    ArgumentError.checkNotNull(reportType, 'reportType');
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.GetAssessmentReport'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'assessmentRunArn': assessmentRunArn,
        'reportFileFormat': reportFileFormat?.toValue() ?? '',
        'reportType': reportType?.toValue() ?? '',
      },
    );

    return GetAssessmentReportResponse.fromJson(jsonResponse.body);
  }

  /// Retrieves the exclusions preview (a list of ExclusionPreview objects)
  /// specified by the preview token. You can obtain the preview token by
  /// running the CreateExclusionsPreview API.
  ///
  /// May throw [InvalidInputException].
  /// May throw [InternalException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  ///
  /// Parameter [assessmentTemplateArn] :
  /// The ARN that specifies the assessment template for which the exclusions
  /// preview was requested.
  ///
  /// Parameter [previewToken] :
  /// The unique identifier associated of the exclusions preview.
  ///
  /// Parameter [locale] :
  /// The locale into which you want to translate the exclusion's title,
  /// description, and recommendation.
  ///
  /// Parameter [maxResults] :
  /// You can use this parameter to indicate the maximum number of items you
  /// want in the response. The default value is 100. The maximum value is 500.
  ///
  /// Parameter [nextToken] :
  /// You can use this parameter when paginating results. Set the value of this
  /// parameter to null on your first call to the GetExclusionsPreviewRequest
  /// action. Subsequent calls to the action fill nextToken in the request with
  /// the value of nextToken from the previous response to continue listing
  /// data.
  Future<GetExclusionsPreviewResponse> getExclusionsPreview({
    @_s.required String assessmentTemplateArn,
    @_s.required String previewToken,
    Locale locale,
    int maxResults,
    String nextToken,
  }) async {
    ArgumentError.checkNotNull(assessmentTemplateArn, 'assessmentTemplateArn');
    _s.validateStringLength(
      'assessmentTemplateArn',
      assessmentTemplateArn,
      1,
      300,
      isRequired: true,
    );
    ArgumentError.checkNotNull(previewToken, 'previewToken');
    _s.validateStringPattern(
      'previewToken',
      previewToken,
      r'''[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}''',
      isRequired: true,
    );
    _s.validateStringLength(
      'nextToken',
      nextToken,
      1,
      300,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.GetExclusionsPreview'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'assessmentTemplateArn': assessmentTemplateArn,
        'previewToken': previewToken,
        if (locale != null) 'locale': locale.toValue(),
        if (maxResults != null) 'maxResults': maxResults,
        if (nextToken != null) 'nextToken': nextToken,
      },
    );

    return GetExclusionsPreviewResponse.fromJson(jsonResponse.body);
  }

  /// Information about the data that is collected for the specified assessment
  /// run.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  ///
  /// Parameter [assessmentRunArn] :
  /// The ARN that specifies the assessment run that has the telemetry data that
  /// you want to obtain.
  Future<GetTelemetryMetadataResponse> getTelemetryMetadata({
    @_s.required String assessmentRunArn,
  }) async {
    ArgumentError.checkNotNull(assessmentRunArn, 'assessmentRunArn');
    _s.validateStringLength(
      'assessmentRunArn',
      assessmentRunArn,
      1,
      300,
      isRequired: true,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.GetTelemetryMetadata'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'assessmentRunArn': assessmentRunArn,
      },
    );

    return GetTelemetryMetadataResponse.fromJson(jsonResponse.body);
  }

  /// Lists the agents of the assessment runs that are specified by the ARNs of
  /// the assessment runs.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  ///
  /// Parameter [assessmentRunArn] :
  /// The ARN that specifies the assessment run whose agents you want to list.
  ///
  /// Parameter [filter] :
  /// You can use this parameter to specify a subset of data to be included in
  /// the action's response.
  ///
  /// For a record to match a filter, all specified filter attributes must
  /// match. When multiple values are specified for a filter attribute, any of
  /// the values can match.
  ///
  /// Parameter [maxResults] :
  /// You can use this parameter to indicate the maximum number of items that
  /// you want in the response. The default value is 10. The maximum value is
  /// 500.
  ///
  /// Parameter [nextToken] :
  /// You can use this parameter when paginating results. Set the value of this
  /// parameter to null on your first call to the <b>ListAssessmentRunAgents</b>
  /// action. Subsequent calls to the action fill <b>nextToken</b> in the
  /// request with the value of <b>NextToken</b> from the previous response to
  /// continue listing data.
  Future<ListAssessmentRunAgentsResponse> listAssessmentRunAgents({
    @_s.required String assessmentRunArn,
    AgentFilter filter,
    int maxResults,
    String nextToken,
  }) async {
    ArgumentError.checkNotNull(assessmentRunArn, 'assessmentRunArn');
    _s.validateStringLength(
      'assessmentRunArn',
      assessmentRunArn,
      1,
      300,
      isRequired: true,
    );
    _s.validateStringLength(
      'nextToken',
      nextToken,
      1,
      300,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.ListAssessmentRunAgents'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'assessmentRunArn': assessmentRunArn,
        if (filter != null) 'filter': filter,
        if (maxResults != null) 'maxResults': maxResults,
        if (nextToken != null) 'nextToken': nextToken,
      },
    );

    return ListAssessmentRunAgentsResponse.fromJson(jsonResponse.body);
  }

  /// Lists the assessment runs that correspond to the assessment templates that
  /// are specified by the ARNs of the assessment templates.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  ///
  /// Parameter [assessmentTemplateArns] :
  /// The ARNs that specify the assessment templates whose assessment runs you
  /// want to list.
  ///
  /// Parameter [filter] :
  /// You can use this parameter to specify a subset of data to be included in
  /// the action's response.
  ///
  /// For a record to match a filter, all specified filter attributes must
  /// match. When multiple values are specified for a filter attribute, any of
  /// the values can match.
  ///
  /// Parameter [maxResults] :
  /// You can use this parameter to indicate the maximum number of items that
  /// you want in the response. The default value is 10. The maximum value is
  /// 500.
  ///
  /// Parameter [nextToken] :
  /// You can use this parameter when paginating results. Set the value of this
  /// parameter to null on your first call to the <b>ListAssessmentRuns</b>
  /// action. Subsequent calls to the action fill <b>nextToken</b> in the
  /// request with the value of <b>NextToken</b> from the previous response to
  /// continue listing data.
  Future<ListAssessmentRunsResponse> listAssessmentRuns({
    List<String> assessmentTemplateArns,
    AssessmentRunFilter filter,
    int maxResults,
    String nextToken,
  }) async {
    _s.validateStringLength(
      'nextToken',
      nextToken,
      1,
      300,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.ListAssessmentRuns'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        if (assessmentTemplateArns != null)
          'assessmentTemplateArns': assessmentTemplateArns,
        if (filter != null) 'filter': filter,
        if (maxResults != null) 'maxResults': maxResults,
        if (nextToken != null) 'nextToken': nextToken,
      },
    );

    return ListAssessmentRunsResponse.fromJson(jsonResponse.body);
  }

  /// Lists the ARNs of the assessment targets within this AWS account. For more
  /// information about assessment targets, see <a
  /// href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_applications.html">Amazon
  /// Inspector Assessment Targets</a>.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AccessDeniedException].
  ///
  /// Parameter [filter] :
  /// You can use this parameter to specify a subset of data to be included in
  /// the action's response.
  ///
  /// For a record to match a filter, all specified filter attributes must
  /// match. When multiple values are specified for a filter attribute, any of
  /// the values can match.
  ///
  /// Parameter [maxResults] :
  /// You can use this parameter to indicate the maximum number of items you
  /// want in the response. The default value is 10. The maximum value is 500.
  ///
  /// Parameter [nextToken] :
  /// You can use this parameter when paginating results. Set the value of this
  /// parameter to null on your first call to the <b>ListAssessmentTargets</b>
  /// action. Subsequent calls to the action fill <b>nextToken</b> in the
  /// request with the value of <b>NextToken</b> from the previous response to
  /// continue listing data.
  Future<ListAssessmentTargetsResponse> listAssessmentTargets({
    AssessmentTargetFilter filter,
    int maxResults,
    String nextToken,
  }) async {
    _s.validateStringLength(
      'nextToken',
      nextToken,
      1,
      300,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.ListAssessmentTargets'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        if (filter != null) 'filter': filter,
        if (maxResults != null) 'maxResults': maxResults,
        if (nextToken != null) 'nextToken': nextToken,
      },
    );

    return ListAssessmentTargetsResponse.fromJson(jsonResponse.body);
  }

  /// Lists the assessment templates that correspond to the assessment targets
  /// that are specified by the ARNs of the assessment targets.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  ///
  /// Parameter [assessmentTargetArns] :
  /// A list of ARNs that specifies the assessment targets whose assessment
  /// templates you want to list.
  ///
  /// Parameter [filter] :
  /// You can use this parameter to specify a subset of data to be included in
  /// the action's response.
  ///
  /// For a record to match a filter, all specified filter attributes must
  /// match. When multiple values are specified for a filter attribute, any of
  /// the values can match.
  ///
  /// Parameter [maxResults] :
  /// You can use this parameter to indicate the maximum number of items you
  /// want in the response. The default value is 10. The maximum value is 500.
  ///
  /// Parameter [nextToken] :
  /// You can use this parameter when paginating results. Set the value of this
  /// parameter to null on your first call to the <b>ListAssessmentTemplates</b>
  /// action. Subsequent calls to the action fill <b>nextToken</b> in the
  /// request with the value of <b>NextToken</b> from the previous response to
  /// continue listing data.
  Future<ListAssessmentTemplatesResponse> listAssessmentTemplates({
    List<String> assessmentTargetArns,
    AssessmentTemplateFilter filter,
    int maxResults,
    String nextToken,
  }) async {
    _s.validateStringLength(
      'nextToken',
      nextToken,
      1,
      300,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.ListAssessmentTemplates'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        if (assessmentTargetArns != null)
          'assessmentTargetArns': assessmentTargetArns,
        if (filter != null) 'filter': filter,
        if (maxResults != null) 'maxResults': maxResults,
        if (nextToken != null) 'nextToken': nextToken,
      },
    );

    return ListAssessmentTemplatesResponse.fromJson(jsonResponse.body);
  }

  /// Lists all the event subscriptions for the assessment template that is
  /// specified by the ARN of the assessment template. For more information, see
  /// <a>SubscribeToEvent</a> and <a>UnsubscribeFromEvent</a>.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  ///
  /// Parameter [maxResults] :
  /// You can use this parameter to indicate the maximum number of items you
  /// want in the response. The default value is 10. The maximum value is 500.
  ///
  /// Parameter [nextToken] :
  /// You can use this parameter when paginating results. Set the value of this
  /// parameter to null on your first call to the <b>ListEventSubscriptions</b>
  /// action. Subsequent calls to the action fill <b>nextToken</b> in the
  /// request with the value of <b>NextToken</b> from the previous response to
  /// continue listing data.
  ///
  /// Parameter [resourceArn] :
  /// The ARN of the assessment template for which you want to list the existing
  /// event subscriptions.
  Future<ListEventSubscriptionsResponse> listEventSubscriptions({
    int maxResults,
    String nextToken,
    String resourceArn,
  }) async {
    _s.validateStringLength(
      'nextToken',
      nextToken,
      1,
      300,
    );
    _s.validateStringLength(
      'resourceArn',
      resourceArn,
      1,
      300,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.ListEventSubscriptions'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        if (maxResults != null) 'maxResults': maxResults,
        if (nextToken != null) 'nextToken': nextToken,
        if (resourceArn != null) 'resourceArn': resourceArn,
      },
    );

    return ListEventSubscriptionsResponse.fromJson(jsonResponse.body);
  }

  /// List exclusions that are generated by the assessment run.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  ///
  /// Parameter [assessmentRunArn] :
  /// The ARN of the assessment run that generated the exclusions that you want
  /// to list.
  ///
  /// Parameter [maxResults] :
  /// You can use this parameter to indicate the maximum number of items you
  /// want in the response. The default value is 100. The maximum value is 500.
  ///
  /// Parameter [nextToken] :
  /// You can use this parameter when paginating results. Set the value of this
  /// parameter to null on your first call to the ListExclusionsRequest action.
  /// Subsequent calls to the action fill nextToken in the request with the
  /// value of nextToken from the previous response to continue listing data.
  Future<ListExclusionsResponse> listExclusions({
    @_s.required String assessmentRunArn,
    int maxResults,
    String nextToken,
  }) async {
    ArgumentError.checkNotNull(assessmentRunArn, 'assessmentRunArn');
    _s.validateStringLength(
      'assessmentRunArn',
      assessmentRunArn,
      1,
      300,
      isRequired: true,
    );
    _s.validateStringLength(
      'nextToken',
      nextToken,
      1,
      300,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.ListExclusions'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'assessmentRunArn': assessmentRunArn,
        if (maxResults != null) 'maxResults': maxResults,
        if (nextToken != null) 'nextToken': nextToken,
      },
    );

    return ListExclusionsResponse.fromJson(jsonResponse.body);
  }

  /// Lists findings that are generated by the assessment runs that are
  /// specified by the ARNs of the assessment runs.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  ///
  /// Parameter [assessmentRunArns] :
  /// The ARNs of the assessment runs that generate the findings that you want
  /// to list.
  ///
  /// Parameter [filter] :
  /// You can use this parameter to specify a subset of data to be included in
  /// the action's response.
  ///
  /// For a record to match a filter, all specified filter attributes must
  /// match. When multiple values are specified for a filter attribute, any of
  /// the values can match.
  ///
  /// Parameter [maxResults] :
  /// You can use this parameter to indicate the maximum number of items you
  /// want in the response. The default value is 10. The maximum value is 500.
  ///
  /// Parameter [nextToken] :
  /// You can use this parameter when paginating results. Set the value of this
  /// parameter to null on your first call to the <b>ListFindings</b> action.
  /// Subsequent calls to the action fill <b>nextToken</b> in the request with
  /// the value of <b>NextToken</b> from the previous response to continue
  /// listing data.
  Future<ListFindingsResponse> listFindings({
    List<String> assessmentRunArns,
    FindingFilter filter,
    int maxResults,
    String nextToken,
  }) async {
    _s.validateStringLength(
      'nextToken',
      nextToken,
      1,
      300,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.ListFindings'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        if (assessmentRunArns != null) 'assessmentRunArns': assessmentRunArns,
        if (filter != null) 'filter': filter,
        if (maxResults != null) 'maxResults': maxResults,
        if (nextToken != null) 'nextToken': nextToken,
      },
    );

    return ListFindingsResponse.fromJson(jsonResponse.body);
  }

  /// Lists all available Amazon Inspector rules packages.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AccessDeniedException].
  ///
  /// Parameter [maxResults] :
  /// You can use this parameter to indicate the maximum number of items you
  /// want in the response. The default value is 10. The maximum value is 500.
  ///
  /// Parameter [nextToken] :
  /// You can use this parameter when paginating results. Set the value of this
  /// parameter to null on your first call to the <b>ListRulesPackages</b>
  /// action. Subsequent calls to the action fill <b>nextToken</b> in the
  /// request with the value of <b>NextToken</b> from the previous response to
  /// continue listing data.
  Future<ListRulesPackagesResponse> listRulesPackages({
    int maxResults,
    String nextToken,
  }) async {
    _s.validateStringLength(
      'nextToken',
      nextToken,
      1,
      300,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.ListRulesPackages'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        if (maxResults != null) 'maxResults': maxResults,
        if (nextToken != null) 'nextToken': nextToken,
      },
    );

    return ListRulesPackagesResponse.fromJson(jsonResponse.body);
  }

  /// Lists all tags associated with an assessment template.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  ///
  /// Parameter [resourceArn] :
  /// The ARN that specifies the assessment template whose tags you want to
  /// list.
  Future<ListTagsForResourceResponse> listTagsForResource({
    @_s.required String resourceArn,
  }) async {
    ArgumentError.checkNotNull(resourceArn, 'resourceArn');
    _s.validateStringLength(
      'resourceArn',
      resourceArn,
      1,
      300,
      isRequired: true,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.ListTagsForResource'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'resourceArn': resourceArn,
      },
    );

    return ListTagsForResourceResponse.fromJson(jsonResponse.body);
  }

  /// Previews the agents installed on the EC2 instances that are part of the
  /// specified assessment target.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  /// May throw [InvalidCrossAccountRoleException].
  ///
  /// Parameter [previewAgentsArn] :
  /// The ARN of the assessment target whose agents you want to preview.
  ///
  /// Parameter [maxResults] :
  /// You can use this parameter to indicate the maximum number of items you
  /// want in the response. The default value is 10. The maximum value is 500.
  ///
  /// Parameter [nextToken] :
  /// You can use this parameter when paginating results. Set the value of this
  /// parameter to null on your first call to the <b>PreviewAgents</b> action.
  /// Subsequent calls to the action fill <b>nextToken</b> in the request with
  /// the value of <b>NextToken</b> from the previous response to continue
  /// listing data.
  Future<PreviewAgentsResponse> previewAgents({
    @_s.required String previewAgentsArn,
    int maxResults,
    String nextToken,
  }) async {
    ArgumentError.checkNotNull(previewAgentsArn, 'previewAgentsArn');
    _s.validateStringLength(
      'previewAgentsArn',
      previewAgentsArn,
      1,
      300,
      isRequired: true,
    );
    _s.validateStringLength(
      'nextToken',
      nextToken,
      1,
      300,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.PreviewAgents'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'previewAgentsArn': previewAgentsArn,
        if (maxResults != null) 'maxResults': maxResults,
        if (nextToken != null) 'nextToken': nextToken,
      },
    );

    return PreviewAgentsResponse.fromJson(jsonResponse.body);
  }

  /// Registers the IAM role that grants Amazon Inspector access to AWS Services
  /// needed to perform security assessments.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AccessDeniedException].
  /// May throw [InvalidCrossAccountRoleException].
  /// May throw [ServiceTemporarilyUnavailableException].
  ///
  /// Parameter [roleArn] :
  /// The ARN of the IAM role that grants Amazon Inspector access to AWS
  /// Services needed to perform security assessments.
  Future<void> registerCrossAccountAccessRole({
    @_s.required String roleArn,
  }) async {
    ArgumentError.checkNotNull(roleArn, 'roleArn');
    _s.validateStringLength(
      'roleArn',
      roleArn,
      1,
      300,
      isRequired: true,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.RegisterCrossAccountAccessRole'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'roleArn': roleArn,
      },
    );
  }

  /// Removes entire attributes (key and value pairs) from the findings that are
  /// specified by the ARNs of the findings where an attribute with the
  /// specified key exists.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  /// May throw [ServiceTemporarilyUnavailableException].
  ///
  /// Parameter [attributeKeys] :
  /// The array of attribute keys that you want to remove from specified
  /// findings.
  ///
  /// Parameter [findingArns] :
  /// The ARNs that specify the findings that you want to remove attributes
  /// from.
  Future<RemoveAttributesFromFindingsResponse> removeAttributesFromFindings({
    @_s.required List<String> attributeKeys,
    @_s.required List<String> findingArns,
  }) async {
    ArgumentError.checkNotNull(attributeKeys, 'attributeKeys');
    ArgumentError.checkNotNull(findingArns, 'findingArns');
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.RemoveAttributesFromFindings'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'attributeKeys': attributeKeys,
        'findingArns': findingArns,
      },
    );

    return RemoveAttributesFromFindingsResponse.fromJson(jsonResponse.body);
  }

  /// Sets tags (key and value pairs) to the assessment template that is
  /// specified by the ARN of the assessment template.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  /// May throw [ServiceTemporarilyUnavailableException].
  ///
  /// Parameter [resourceArn] :
  /// The ARN of the assessment template that you want to set tags to.
  ///
  /// Parameter [tags] :
  /// A collection of key and value pairs that you want to set to the assessment
  /// template.
  Future<void> setTagsForResource({
    @_s.required String resourceArn,
    List<Tag> tags,
  }) async {
    ArgumentError.checkNotNull(resourceArn, 'resourceArn');
    _s.validateStringLength(
      'resourceArn',
      resourceArn,
      1,
      300,
      isRequired: true,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.SetTagsForResource'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'resourceArn': resourceArn,
        if (tags != null) 'tags': tags,
      },
    );
  }

  /// Starts the assessment run specified by the ARN of the assessment template.
  /// For this API to function properly, you must not exceed the limit of
  /// running up to 500 concurrent agents per AWS account.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [LimitExceededException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  /// May throw [InvalidCrossAccountRoleException].
  /// May throw [AgentsAlreadyRunningAssessmentException].
  /// May throw [ServiceTemporarilyUnavailableException].
  ///
  /// Parameter [assessmentTemplateArn] :
  /// The ARN of the assessment template of the assessment run that you want to
  /// start.
  ///
  /// Parameter [assessmentRunName] :
  /// You can specify the name for the assessment run. The name must be unique
  /// for the assessment template whose ARN is used to start the assessment run.
  Future<StartAssessmentRunResponse> startAssessmentRun({
    @_s.required String assessmentTemplateArn,
    String assessmentRunName,
  }) async {
    ArgumentError.checkNotNull(assessmentTemplateArn, 'assessmentTemplateArn');
    _s.validateStringLength(
      'assessmentTemplateArn',
      assessmentTemplateArn,
      1,
      300,
      isRequired: true,
    );
    _s.validateStringLength(
      'assessmentRunName',
      assessmentRunName,
      1,
      140,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.StartAssessmentRun'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'assessmentTemplateArn': assessmentTemplateArn,
        if (assessmentRunName != null) 'assessmentRunName': assessmentRunName,
      },
    );

    return StartAssessmentRunResponse.fromJson(jsonResponse.body);
  }

  /// Stops the assessment run that is specified by the ARN of the assessment
  /// run.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  /// May throw [ServiceTemporarilyUnavailableException].
  ///
  /// Parameter [assessmentRunArn] :
  /// The ARN of the assessment run that you want to stop.
  ///
  /// Parameter [stopAction] :
  /// An input option that can be set to either START_EVALUATION or
  /// SKIP_EVALUATION. START_EVALUATION (the default value), stops the AWS agent
  /// from collecting data and begins the results evaluation and the findings
  /// generation process. SKIP_EVALUATION cancels the assessment run
  /// immediately, after which no findings are generated.
  Future<void> stopAssessmentRun({
    @_s.required String assessmentRunArn,
    StopAction stopAction,
  }) async {
    ArgumentError.checkNotNull(assessmentRunArn, 'assessmentRunArn');
    _s.validateStringLength(
      'assessmentRunArn',
      assessmentRunArn,
      1,
      300,
      isRequired: true,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.StopAssessmentRun'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'assessmentRunArn': assessmentRunArn,
        if (stopAction != null) 'stopAction': stopAction.toValue(),
      },
    );
  }

  /// Enables the process of sending Amazon Simple Notification Service (SNS)
  /// notifications about a specified event to a specified SNS topic.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [LimitExceededException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  /// May throw [ServiceTemporarilyUnavailableException].
  ///
  /// Parameter [event] :
  /// The event for which you want to receive SNS notifications.
  ///
  /// Parameter [resourceArn] :
  /// The ARN of the assessment template that is used during the event for which
  /// you want to receive SNS notifications.
  ///
  /// Parameter [topicArn] :
  /// The ARN of the SNS topic to which the SNS notifications are sent.
  Future<void> subscribeToEvent({
    @_s.required InspectorEvent event,
    @_s.required String resourceArn,
    @_s.required String topicArn,
  }) async {
    ArgumentError.checkNotNull(event, 'event');
    ArgumentError.checkNotNull(resourceArn, 'resourceArn');
    _s.validateStringLength(
      'resourceArn',
      resourceArn,
      1,
      300,
      isRequired: true,
    );
    ArgumentError.checkNotNull(topicArn, 'topicArn');
    _s.validateStringLength(
      'topicArn',
      topicArn,
      1,
      300,
      isRequired: true,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.SubscribeToEvent'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'event': event?.toValue() ?? '',
        'resourceArn': resourceArn,
        'topicArn': topicArn,
      },
    );
  }

  /// Disables the process of sending Amazon Simple Notification Service (SNS)
  /// notifications about a specified event to a specified SNS topic.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  /// May throw [ServiceTemporarilyUnavailableException].
  ///
  /// Parameter [event] :
  /// The event for which you want to stop receiving SNS notifications.
  ///
  /// Parameter [resourceArn] :
  /// The ARN of the assessment template that is used during the event for which
  /// you want to stop receiving SNS notifications.
  ///
  /// Parameter [topicArn] :
  /// The ARN of the SNS topic to which SNS notifications are sent.
  Future<void> unsubscribeFromEvent({
    @_s.required InspectorEvent event,
    @_s.required String resourceArn,
    @_s.required String topicArn,
  }) async {
    ArgumentError.checkNotNull(event, 'event');
    ArgumentError.checkNotNull(resourceArn, 'resourceArn');
    _s.validateStringLength(
      'resourceArn',
      resourceArn,
      1,
      300,
      isRequired: true,
    );
    ArgumentError.checkNotNull(topicArn, 'topicArn');
    _s.validateStringLength(
      'topicArn',
      topicArn,
      1,
      300,
      isRequired: true,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.UnsubscribeFromEvent'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'event': event?.toValue() ?? '',
        'resourceArn': resourceArn,
        'topicArn': topicArn,
      },
    );
  }

  /// Updates the assessment target that is specified by the ARN of the
  /// assessment target.
  ///
  /// If resourceGroupArn is not specified, all EC2 instances in the current AWS
  /// account and region are included in the assessment target.
  ///
  /// May throw [InternalException].
  /// May throw [InvalidInputException].
  /// May throw [AccessDeniedException].
  /// May throw [NoSuchEntityException].
  /// May throw [ServiceTemporarilyUnavailableException].
  ///
  /// Parameter [assessmentTargetArn] :
  /// The ARN of the assessment target that you want to update.
  ///
  /// Parameter [assessmentTargetName] :
  /// The name of the assessment target that you want to update.
  ///
  /// Parameter [resourceGroupArn] :
  /// The ARN of the resource group that is used to specify the new resource
  /// group to associate with the assessment target.
  Future<void> updateAssessmentTarget({
    @_s.required String assessmentTargetArn,
    @_s.required String assessmentTargetName,
    String resourceGroupArn,
  }) async {
    ArgumentError.checkNotNull(assessmentTargetArn, 'assessmentTargetArn');
    _s.validateStringLength(
      'assessmentTargetArn',
      assessmentTargetArn,
      1,
      300,
      isRequired: true,
    );
    ArgumentError.checkNotNull(assessmentTargetName, 'assessmentTargetName');
    _s.validateStringLength(
      'assessmentTargetName',
      assessmentTargetName,
      1,
      140,
      isRequired: true,
    );
    _s.validateStringLength(
      'resourceGroupArn',
      resourceGroupArn,
      1,
      300,
    );
    final headers = <String, String>{
      'Content-Type': 'application/x-amz-json-1.1',
      'X-Amz-Target': 'InspectorService.UpdateAssessmentTarget'
    };
    final jsonResponse = await _protocol.send(
      method: 'POST',
      requestUri: '/',
      exceptionFnMap: _exceptionFns,
      // TODO queryParams
      headers: headers,
      payload: {
        'assessmentTargetArn': assessmentTargetArn,
        'assessmentTargetName': assessmentTargetName,
        if (resourceGroupArn != null) 'resourceGroupArn': resourceGroupArn,
      },
    );
  }
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class AddAttributesToFindingsResponse {
  /// Attribute details that cannot be described. An error code is provided for
  /// each failed item.
  @_s.JsonKey(name: 'failedItems')
  final Map<String, FailedItemDetails> failedItems;

  AddAttributesToFindingsResponse({
    @_s.required this.failedItems,
  });
  factory AddAttributesToFindingsResponse.fromJson(Map<String, dynamic> json) =>
      _$AddAttributesToFindingsResponseFromJson(json);
}

/// Contains information about an Amazon Inspector agent. This data type is used
/// as a request parameter in the <a>ListAssessmentRunAgents</a> action.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: false,
    createToJson: true)
class AgentFilter {
  /// The detailed health state of the agent. Values can be set to <b>IDLE</b>,
  /// <b>RUNNING</b>, <b>SHUTDOWN</b>, <b>UNHEALTHY</b>, <b>THROTTLED</b>, and
  /// <b>UNKNOWN</b>.
  @_s.JsonKey(name: 'agentHealthCodes')
  final List<AgentHealthCode> agentHealthCodes;

  /// The current health state of the agent. Values can be set to <b>HEALTHY</b>
  /// or <b>UNHEALTHY</b>.
  @_s.JsonKey(name: 'agentHealths')
  final List<AgentHealth> agentHealths;

  AgentFilter({
    @_s.required this.agentHealthCodes,
    @_s.required this.agentHealths,
  });
  Map<String, dynamic> toJson() => _$AgentFilterToJson(this);
}

enum AgentHealth {
  @_s.JsonValue('HEALTHY')
  healthy,
  @_s.JsonValue('UNHEALTHY')
  unhealthy,
  @_s.JsonValue('UNKNOWN')
  unknown,
}

enum AgentHealthCode {
  @_s.JsonValue('IDLE')
  idle,
  @_s.JsonValue('RUNNING')
  running,
  @_s.JsonValue('SHUTDOWN')
  shutdown,
  @_s.JsonValue('UNHEALTHY')
  unhealthy,
  @_s.JsonValue('THROTTLED')
  throttled,
  @_s.JsonValue('UNKNOWN')
  unknown,
}

/// Used as a response element in the <a>PreviewAgents</a> action.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class AgentPreview {
  /// The ID of the EC2 instance where the agent is installed.
  @_s.JsonKey(name: 'agentId')
  final String agentId;

  /// The health status of the Amazon Inspector Agent.
  @_s.JsonKey(name: 'agentHealth')
  final AgentHealth agentHealth;

  /// The version of the Amazon Inspector Agent.
  @_s.JsonKey(name: 'agentVersion')
  final String agentVersion;

  /// The Auto Scaling group for the EC2 instance where the agent is installed.
  @_s.JsonKey(name: 'autoScalingGroup')
  final String autoScalingGroup;

  /// The hostname of the EC2 instance on which the Amazon Inspector Agent is
  /// installed.
  @_s.JsonKey(name: 'hostname')
  final String hostname;

  /// The IP address of the EC2 instance on which the Amazon Inspector Agent is
  /// installed.
  @_s.JsonKey(name: 'ipv4Address')
  final String ipv4Address;

  /// The kernel version of the operating system running on the EC2 instance on
  /// which the Amazon Inspector Agent is installed.
  @_s.JsonKey(name: 'kernelVersion')
  final String kernelVersion;

  /// The operating system running on the EC2 instance on which the Amazon
  /// Inspector Agent is installed.
  @_s.JsonKey(name: 'operatingSystem')
  final String operatingSystem;

  AgentPreview({
    @_s.required this.agentId,
    this.agentHealth,
    this.agentVersion,
    this.autoScalingGroup,
    this.hostname,
    this.ipv4Address,
    this.kernelVersion,
    this.operatingSystem,
  });
  factory AgentPreview.fromJson(Map<String, dynamic> json) =>
      _$AgentPreviewFromJson(json);
}

/// A snapshot of an Amazon Inspector assessment run that contains the findings
/// of the assessment run .
///
/// Used as the response element in the <a>DescribeAssessmentRuns</a> action.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class AssessmentRun {
  /// The ARN of the assessment run.
  @_s.JsonKey(name: 'arn')
  final String arn;

  /// The ARN of the assessment template that is associated with the assessment
  /// run.
  @_s.JsonKey(name: 'assessmentTemplateArn')
  final String assessmentTemplateArn;

  /// The time when <a>StartAssessmentRun</a> was called.
  @UnixDateTimeConverter()
  @_s.JsonKey(name: 'createdAt')
  final DateTime createdAt;

  /// A Boolean value (true or false) that specifies whether the process of
  /// collecting data from the agents is completed.
  @_s.JsonKey(name: 'dataCollected')
  final bool dataCollected;

  /// The duration of the assessment run.
  @_s.JsonKey(name: 'durationInSeconds')
  final int durationInSeconds;

  /// Provides a total count of generated findings per severity.
  @_s.JsonKey(name: 'findingCounts')
  final Map<Severity, int> findingCounts;

  /// The auto-generated name for the assessment run.
  @_s.JsonKey(name: 'name')
  final String name;

  /// A list of notifications for the event subscriptions. A notification about a
  /// particular generated finding is added to this list only once.
  @_s.JsonKey(name: 'notifications')
  final List<AssessmentRunNotification> notifications;

  /// The rules packages selected for the assessment run.
  @_s.JsonKey(name: 'rulesPackageArns')
  final List<String> rulesPackageArns;

  /// The state of the assessment run.
  @_s.JsonKey(name: 'state')
  final AssessmentRunState state;

  /// The last time when the assessment run's state changed.
  @UnixDateTimeConverter()
  @_s.JsonKey(name: 'stateChangedAt')
  final DateTime stateChangedAt;

  /// A list of the assessment run state changes.
  @_s.JsonKey(name: 'stateChanges')
  final List<AssessmentRunStateChange> stateChanges;

  /// The user-defined attributes that are assigned to every generated finding.
  @_s.JsonKey(name: 'userAttributesForFindings')
  final List<Attribute> userAttributesForFindings;

  /// The assessment run completion time that corresponds to the rules packages
  /// evaluation completion time or failure.
  @UnixDateTimeConverter()
  @_s.JsonKey(name: 'completedAt')
  final DateTime completedAt;

  /// The time when <a>StartAssessmentRun</a> was called.
  @UnixDateTimeConverter()
  @_s.JsonKey(name: 'startedAt')
  final DateTime startedAt;

  AssessmentRun({
    @_s.required this.arn,
    @_s.required this.assessmentTemplateArn,
    @_s.required this.createdAt,
    @_s.required this.dataCollected,
    @_s.required this.durationInSeconds,
    @_s.required this.findingCounts,
    @_s.required this.name,
    @_s.required this.notifications,
    @_s.required this.rulesPackageArns,
    @_s.required this.state,
    @_s.required this.stateChangedAt,
    @_s.required this.stateChanges,
    @_s.required this.userAttributesForFindings,
    this.completedAt,
    this.startedAt,
  });
  factory AssessmentRun.fromJson(Map<String, dynamic> json) =>
      _$AssessmentRunFromJson(json);
}

/// Contains information about an Amazon Inspector agent. This data type is used
/// as a response element in the <a>ListAssessmentRunAgents</a> action.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class AssessmentRunAgent {
  /// The current health state of the agent.
  @_s.JsonKey(name: 'agentHealth')
  final AgentHealth agentHealth;

  /// The detailed health state of the agent.
  @_s.JsonKey(name: 'agentHealthCode')
  final AgentHealthCode agentHealthCode;

  /// The AWS account of the EC2 instance where the agent is installed.
  @_s.JsonKey(name: 'agentId')
  final String agentId;

  /// The ARN of the assessment run that is associated with the agent.
  @_s.JsonKey(name: 'assessmentRunArn')
  final String assessmentRunArn;

  /// The Amazon Inspector application data metrics that are collected by the
  /// agent.
  @_s.JsonKey(name: 'telemetryMetadata')
  final List<TelemetryMetadata> telemetryMetadata;

  /// The description for the agent health code.
  @_s.JsonKey(name: 'agentHealthDetails')
  final String agentHealthDetails;

  /// The Auto Scaling group of the EC2 instance that is specified by the agent
  /// ID.
  @_s.JsonKey(name: 'autoScalingGroup')
  final String autoScalingGroup;

  AssessmentRunAgent({
    @_s.required this.agentHealth,
    @_s.required this.agentHealthCode,
    @_s.required this.agentId,
    @_s.required this.assessmentRunArn,
    @_s.required this.telemetryMetadata,
    this.agentHealthDetails,
    this.autoScalingGroup,
  });
  factory AssessmentRunAgent.fromJson(Map<String, dynamic> json) =>
      _$AssessmentRunAgentFromJson(json);
}

/// Used as the request parameter in the <a>ListAssessmentRuns</a> action.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: false,
    createToJson: true)
class AssessmentRunFilter {
  /// For a record to match a filter, the value that is specified for this data
  /// type property must inclusively match any value between the specified minimum
  /// and maximum values of the <b>completedAt</b> property of the
  /// <a>AssessmentRun</a> data type.
  @_s.JsonKey(name: 'completionTimeRange')
  final TimestampRange completionTimeRange;

  /// For a record to match a filter, the value that is specified for this data
  /// type property must inclusively match any value between the specified minimum
  /// and maximum values of the <b>durationInSeconds</b> property of the
  /// <a>AssessmentRun</a> data type.
  @_s.JsonKey(name: 'durationRange')
  final DurationRange durationRange;

  /// For a record to match a filter, an explicit value or a string containing a
  /// wildcard that is specified for this data type property must match the value
  /// of the <b>assessmentRunName</b> property of the <a>AssessmentRun</a> data
  /// type.
  @_s.JsonKey(name: 'namePattern')
  final String namePattern;

  /// For a record to match a filter, the value that is specified for this data
  /// type property must be contained in the list of values of the
  /// <b>rulesPackages</b> property of the <a>AssessmentRun</a> data type.
  @_s.JsonKey(name: 'rulesPackageArns')
  final List<String> rulesPackageArns;

  /// For a record to match a filter, the value that is specified for this data
  /// type property must inclusively match any value between the specified minimum
  /// and maximum values of the <b>startTime</b> property of the
  /// <a>AssessmentRun</a> data type.
  @_s.JsonKey(name: 'startTimeRange')
  final TimestampRange startTimeRange;

  /// For a record to match a filter, the value that is specified for this data
  /// type property must match the <b>stateChangedAt</b> property of the
  /// <a>AssessmentRun</a> data type.
  @_s.JsonKey(name: 'stateChangeTimeRange')
  final TimestampRange stateChangeTimeRange;

  /// For a record to match a filter, one of the values specified for this data
  /// type property must be the exact match of the value of the
  /// <b>assessmentRunState</b> property of the <a>AssessmentRun</a> data type.
  @_s.JsonKey(name: 'states')
  final List<AssessmentRunState> states;

  AssessmentRunFilter({
    this.completionTimeRange,
    this.durationRange,
    this.namePattern,
    this.rulesPackageArns,
    this.startTimeRange,
    this.stateChangeTimeRange,
    this.states,
  });
  Map<String, dynamic> toJson() => _$AssessmentRunFilterToJson(this);
}

/// Used as one of the elements of the <a>AssessmentRun</a> data type.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class AssessmentRunNotification {
  /// The date of the notification.
  @UnixDateTimeConverter()
  @_s.JsonKey(name: 'date')
  final DateTime date;

  /// The Boolean value that specifies whether the notification represents an
  /// error.
  @_s.JsonKey(name: 'error')
  final bool error;

  /// The event for which a notification is sent.
  @_s.JsonKey(name: 'event')
  final InspectorEvent event;

  /// The message included in the notification.
  @_s.JsonKey(name: 'message')
  final String message;

  /// The status code of the SNS notification.
  @_s.JsonKey(name: 'snsPublishStatusCode')
  final AssessmentRunNotificationSnsStatusCode snsPublishStatusCode;

  /// The SNS topic to which the SNS notification is sent.
  @_s.JsonKey(name: 'snsTopicArn')
  final String snsTopicArn;

  AssessmentRunNotification({
    @_s.required this.date,
    @_s.required this.error,
    @_s.required this.event,
    this.message,
    this.snsPublishStatusCode,
    this.snsTopicArn,
  });
  factory AssessmentRunNotification.fromJson(Map<String, dynamic> json) =>
      _$AssessmentRunNotificationFromJson(json);
}

enum AssessmentRunNotificationSnsStatusCode {
  @_s.JsonValue('SUCCESS')
  success,
  @_s.JsonValue('TOPIC_DOES_NOT_EXIST')
  topicDoesNotExist,
  @_s.JsonValue('ACCESS_DENIED')
  accessDenied,
  @_s.JsonValue('INTERNAL_ERROR')
  internalError,
}

enum AssessmentRunState {
  @_s.JsonValue('CREATED')
  created,
  @_s.JsonValue('START_DATA_COLLECTION_PENDING')
  startDataCollectionPending,
  @_s.JsonValue('START_DATA_COLLECTION_IN_PROGRESS')
  startDataCollectionInProgress,
  @_s.JsonValue('COLLECTING_DATA')
  collectingData,
  @_s.JsonValue('STOP_DATA_COLLECTION_PENDING')
  stopDataCollectionPending,
  @_s.JsonValue('DATA_COLLECTED')
  dataCollected,
  @_s.JsonValue('START_EVALUATING_RULES_PENDING')
  startEvaluatingRulesPending,
  @_s.JsonValue('EVALUATING_RULES')
  evaluatingRules,
  @_s.JsonValue('FAILED')
  failed,
  @_s.JsonValue('ERROR')
  error,
  @_s.JsonValue('COMPLETED')
  completed,
  @_s.JsonValue('COMPLETED_WITH_ERRORS')
  completedWithErrors,
  @_s.JsonValue('CANCELED')
  canceled,
}

/// Used as one of the elements of the <a>AssessmentRun</a> data type.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class AssessmentRunStateChange {
  /// The assessment run state.
  @_s.JsonKey(name: 'state')
  final AssessmentRunState state;

  /// The last time the assessment run state changed.
  @UnixDateTimeConverter()
  @_s.JsonKey(name: 'stateChangedAt')
  final DateTime stateChangedAt;

  AssessmentRunStateChange({
    @_s.required this.state,
    @_s.required this.stateChangedAt,
  });
  factory AssessmentRunStateChange.fromJson(Map<String, dynamic> json) =>
      _$AssessmentRunStateChangeFromJson(json);
}

/// Contains information about an Amazon Inspector application. This data type
/// is used as the response element in the <a>DescribeAssessmentTargets</a>
/// action.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class AssessmentTarget {
  /// The ARN that specifies the Amazon Inspector assessment target.
  @_s.JsonKey(name: 'arn')
  final String arn;

  /// The time at which the assessment target is created.
  @UnixDateTimeConverter()
  @_s.JsonKey(name: 'createdAt')
  final DateTime createdAt;

  /// The name of the Amazon Inspector assessment target.
  @_s.JsonKey(name: 'name')
  final String name;

  /// The time at which <a>UpdateAssessmentTarget</a> is called.
  @UnixDateTimeConverter()
  @_s.JsonKey(name: 'updatedAt')
  final DateTime updatedAt;

  /// The ARN that specifies the resource group that is associated with the
  /// assessment target.
  @_s.JsonKey(name: 'resourceGroupArn')
  final String resourceGroupArn;

  AssessmentTarget({
    @_s.required this.arn,
    @_s.required this.createdAt,
    @_s.required this.name,
    @_s.required this.updatedAt,
    this.resourceGroupArn,
  });
  factory AssessmentTarget.fromJson(Map<String, dynamic> json) =>
      _$AssessmentTargetFromJson(json);
}

/// Used as the request parameter in the <a>ListAssessmentTargets</a> action.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: false,
    createToJson: true)
class AssessmentTargetFilter {
  /// For a record to match a filter, an explicit value or a string that contains
  /// a wildcard that is specified for this data type property must match the
  /// value of the <b>assessmentTargetName</b> property of the
  /// <a>AssessmentTarget</a> data type.
  @_s.JsonKey(name: 'assessmentTargetNamePattern')
  final String assessmentTargetNamePattern;

  AssessmentTargetFilter({
    this.assessmentTargetNamePattern,
  });
  Map<String, dynamic> toJson() => _$AssessmentTargetFilterToJson(this);
}

/// Contains information about an Amazon Inspector assessment template. This
/// data type is used as the response element in the
/// <a>DescribeAssessmentTemplates</a> action.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class AssessmentTemplate {
  /// The ARN of the assessment template.
  @_s.JsonKey(name: 'arn')
  final String arn;

  /// The number of existing assessment runs associated with this assessment
  /// template. This value can be zero or a positive integer.
  @_s.JsonKey(name: 'assessmentRunCount')
  final int assessmentRunCount;

  /// The ARN of the assessment target that corresponds to this assessment
  /// template.
  @_s.JsonKey(name: 'assessmentTargetArn')
  final String assessmentTargetArn;

  /// The time at which the assessment template is created.
  @UnixDateTimeConverter()
  @_s.JsonKey(name: 'createdAt')
  final DateTime createdAt;

  /// The duration in seconds specified for this assessment template. The default
  /// value is 3600 seconds (one hour). The maximum value is 86400 seconds (one
  /// day).
  @_s.JsonKey(name: 'durationInSeconds')
  final int durationInSeconds;

  /// The name of the assessment template.
  @_s.JsonKey(name: 'name')
  final String name;

  /// The rules packages that are specified for this assessment template.
  @_s.JsonKey(name: 'rulesPackageArns')
  final List<String> rulesPackageArns;

  /// The user-defined attributes that are assigned to every generated finding
  /// from the assessment run that uses this assessment template.
  @_s.JsonKey(name: 'userAttributesForFindings')
  final List<Attribute> userAttributesForFindings;

  /// The Amazon Resource Name (ARN) of the most recent assessment run associated
  /// with this assessment template. This value exists only when the value of
  /// assessmentRunCount is greaterpa than zero.
  @_s.JsonKey(name: 'lastAssessmentRunArn')
  final String lastAssessmentRunArn;

  AssessmentTemplate({
    @_s.required this.arn,
    @_s.required this.assessmentRunCount,
    @_s.required this.assessmentTargetArn,
    @_s.required this.createdAt,
    @_s.required this.durationInSeconds,
    @_s.required this.name,
    @_s.required this.rulesPackageArns,
    @_s.required this.userAttributesForFindings,
    this.lastAssessmentRunArn,
  });
  factory AssessmentTemplate.fromJson(Map<String, dynamic> json) =>
      _$AssessmentTemplateFromJson(json);
}

/// Used as the request parameter in the <a>ListAssessmentTemplates</a> action.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: false,
    createToJson: true)
class AssessmentTemplateFilter {
  /// For a record to match a filter, the value specified for this data type
  /// property must inclusively match any value between the specified minimum and
  /// maximum values of the <b>durationInSeconds</b> property of the
  /// <a>AssessmentTemplate</a> data type.
  @_s.JsonKey(name: 'durationRange')
  final DurationRange durationRange;

  /// For a record to match a filter, an explicit value or a string that contains
  /// a wildcard that is specified for this data type property must match the
  /// value of the <b>assessmentTemplateName</b> property of the
  /// <a>AssessmentTemplate</a> data type.
  @_s.JsonKey(name: 'namePattern')
  final String namePattern;

  /// For a record to match a filter, the values that are specified for this data
  /// type property must be contained in the list of values of the
  /// <b>rulesPackageArns</b> property of the <a>AssessmentTemplate</a> data type.
  @_s.JsonKey(name: 'rulesPackageArns')
  final List<String> rulesPackageArns;

  AssessmentTemplateFilter({
    this.durationRange,
    this.namePattern,
    this.rulesPackageArns,
  });
  Map<String, dynamic> toJson() => _$AssessmentTemplateFilterToJson(this);
}

/// A collection of attributes of the host from which the finding is generated.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class AssetAttributes {
  /// The schema version of this data type.
  @_s.JsonKey(name: 'schemaVersion')
  final int schemaVersion;

  /// The ID of the agent that is installed on the EC2 instance where the finding
  /// is generated.
  @_s.JsonKey(name: 'agentId')
  final String agentId;

  /// The ID of the Amazon Machine Image (AMI) that is installed on the EC2
  /// instance where the finding is generated.
  @_s.JsonKey(name: 'amiId')
  final String amiId;

  /// The Auto Scaling group of the EC2 instance where the finding is generated.
  @_s.JsonKey(name: 'autoScalingGroup')
  final String autoScalingGroup;

  /// The hostname of the EC2 instance where the finding is generated.
  @_s.JsonKey(name: 'hostname')
  final String hostname;

  /// The list of IP v4 addresses of the EC2 instance where the finding is
  /// generated.
  @_s.JsonKey(name: 'ipv4Addresses')
  final List<String> ipv4Addresses;

  /// An array of the network interfaces interacting with the EC2 instance where
  /// the finding is generated.
  @_s.JsonKey(name: 'networkInterfaces')
  final List<NetworkInterface> networkInterfaces;

  /// The tags related to the EC2 instance where the finding is generated.
  @_s.JsonKey(name: 'tags')
  final List<Tag> tags;

  AssetAttributes({
    @_s.required this.schemaVersion,
    this.agentId,
    this.amiId,
    this.autoScalingGroup,
    this.hostname,
    this.ipv4Addresses,
    this.networkInterfaces,
    this.tags,
  });
  factory AssetAttributes.fromJson(Map<String, dynamic> json) =>
      _$AssetAttributesFromJson(json);
}

enum AssetType {
  @_s.JsonValue('ec2-instance')
  ec2Instance,
}

/// This data type is used as a request parameter in the
/// <a>AddAttributesToFindings</a> and <a>CreateAssessmentTemplate</a> actions.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: true)
class Attribute {
  /// The attribute key.
  @_s.JsonKey(name: 'key')
  final String key;

  /// The value assigned to the attribute key.
  @_s.JsonKey(name: 'value')
  final String value;

  Attribute({
    @_s.required this.key,
    this.value,
  });
  factory Attribute.fromJson(Map<String, dynamic> json) =>
      _$AttributeFromJson(json);

  Map<String, dynamic> toJson() => _$AttributeToJson(this);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class CreateAssessmentTargetResponse {
  /// The ARN that specifies the assessment target that is created.
  @_s.JsonKey(name: 'assessmentTargetArn')
  final String assessmentTargetArn;

  CreateAssessmentTargetResponse({
    @_s.required this.assessmentTargetArn,
  });
  factory CreateAssessmentTargetResponse.fromJson(Map<String, dynamic> json) =>
      _$CreateAssessmentTargetResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class CreateAssessmentTemplateResponse {
  /// The ARN that specifies the assessment template that is created.
  @_s.JsonKey(name: 'assessmentTemplateArn')
  final String assessmentTemplateArn;

  CreateAssessmentTemplateResponse({
    @_s.required this.assessmentTemplateArn,
  });
  factory CreateAssessmentTemplateResponse.fromJson(
          Map<String, dynamic> json) =>
      _$CreateAssessmentTemplateResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class CreateExclusionsPreviewResponse {
  /// Specifies the unique identifier of the requested exclusions preview. You can
  /// use the unique identifier to retrieve the exclusions preview when running
  /// the GetExclusionsPreview API.
  @_s.JsonKey(name: 'previewToken')
  final String previewToken;

  CreateExclusionsPreviewResponse({
    @_s.required this.previewToken,
  });
  factory CreateExclusionsPreviewResponse.fromJson(Map<String, dynamic> json) =>
      _$CreateExclusionsPreviewResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class CreateResourceGroupResponse {
  /// The ARN that specifies the resource group that is created.
  @_s.JsonKey(name: 'resourceGroupArn')
  final String resourceGroupArn;

  CreateResourceGroupResponse({
    @_s.required this.resourceGroupArn,
  });
  factory CreateResourceGroupResponse.fromJson(Map<String, dynamic> json) =>
      _$CreateResourceGroupResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class DescribeAssessmentRunsResponse {
  /// Information about the assessment run.
  @_s.JsonKey(name: 'assessmentRuns')
  final List<AssessmentRun> assessmentRuns;

  /// Assessment run details that cannot be described. An error code is provided
  /// for each failed item.
  @_s.JsonKey(name: 'failedItems')
  final Map<String, FailedItemDetails> failedItems;

  DescribeAssessmentRunsResponse({
    @_s.required this.assessmentRuns,
    @_s.required this.failedItems,
  });
  factory DescribeAssessmentRunsResponse.fromJson(Map<String, dynamic> json) =>
      _$DescribeAssessmentRunsResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class DescribeAssessmentTargetsResponse {
  /// Information about the assessment targets.
  @_s.JsonKey(name: 'assessmentTargets')
  final List<AssessmentTarget> assessmentTargets;

  /// Assessment target details that cannot be described. An error code is
  /// provided for each failed item.
  @_s.JsonKey(name: 'failedItems')
  final Map<String, FailedItemDetails> failedItems;

  DescribeAssessmentTargetsResponse({
    @_s.required this.assessmentTargets,
    @_s.required this.failedItems,
  });
  factory DescribeAssessmentTargetsResponse.fromJson(
          Map<String, dynamic> json) =>
      _$DescribeAssessmentTargetsResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class DescribeAssessmentTemplatesResponse {
  /// Information about the assessment templates.
  @_s.JsonKey(name: 'assessmentTemplates')
  final List<AssessmentTemplate> assessmentTemplates;

  /// Assessment template details that cannot be described. An error code is
  /// provided for each failed item.
  @_s.JsonKey(name: 'failedItems')
  final Map<String, FailedItemDetails> failedItems;

  DescribeAssessmentTemplatesResponse({
    @_s.required this.assessmentTemplates,
    @_s.required this.failedItems,
  });
  factory DescribeAssessmentTemplatesResponse.fromJson(
          Map<String, dynamic> json) =>
      _$DescribeAssessmentTemplatesResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class DescribeCrossAccountAccessRoleResponse {
  /// The date when the cross-account access role was registered.
  @UnixDateTimeConverter()
  @_s.JsonKey(name: 'registeredAt')
  final DateTime registeredAt;

  /// The ARN that specifies the IAM role that Amazon Inspector uses to access
  /// your AWS account.
  @_s.JsonKey(name: 'roleArn')
  final String roleArn;

  /// A Boolean value that specifies whether the IAM role has the necessary
  /// policies attached to enable Amazon Inspector to access your AWS account.
  @_s.JsonKey(name: 'valid')
  final bool valid;

  DescribeCrossAccountAccessRoleResponse({
    @_s.required this.registeredAt,
    @_s.required this.roleArn,
    @_s.required this.valid,
  });
  factory DescribeCrossAccountAccessRoleResponse.fromJson(
          Map<String, dynamic> json) =>
      _$DescribeCrossAccountAccessRoleResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class DescribeExclusionsResponse {
  /// Information about the exclusions.
  @_s.JsonKey(name: 'exclusions')
  final Map<String, Exclusion> exclusions;

  /// Exclusion details that cannot be described. An error code is provided for
  /// each failed item.
  @_s.JsonKey(name: 'failedItems')
  final Map<String, FailedItemDetails> failedItems;

  DescribeExclusionsResponse({
    @_s.required this.exclusions,
    @_s.required this.failedItems,
  });
  factory DescribeExclusionsResponse.fromJson(Map<String, dynamic> json) =>
      _$DescribeExclusionsResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class DescribeFindingsResponse {
  /// Finding details that cannot be described. An error code is provided for each
  /// failed item.
  @_s.JsonKey(name: 'failedItems')
  final Map<String, FailedItemDetails> failedItems;

  /// Information about the finding.
  @_s.JsonKey(name: 'findings')
  final List<Finding> findings;

  DescribeFindingsResponse({
    @_s.required this.failedItems,
    @_s.required this.findings,
  });
  factory DescribeFindingsResponse.fromJson(Map<String, dynamic> json) =>
      _$DescribeFindingsResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class DescribeResourceGroupsResponse {
  /// Resource group details that cannot be described. An error code is provided
  /// for each failed item.
  @_s.JsonKey(name: 'failedItems')
  final Map<String, FailedItemDetails> failedItems;

  /// Information about a resource group.
  @_s.JsonKey(name: 'resourceGroups')
  final List<ResourceGroup> resourceGroups;

  DescribeResourceGroupsResponse({
    @_s.required this.failedItems,
    @_s.required this.resourceGroups,
  });
  factory DescribeResourceGroupsResponse.fromJson(Map<String, dynamic> json) =>
      _$DescribeResourceGroupsResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class DescribeRulesPackagesResponse {
  /// Rules package details that cannot be described. An error code is provided
  /// for each failed item.
  @_s.JsonKey(name: 'failedItems')
  final Map<String, FailedItemDetails> failedItems;

  /// Information about the rules package.
  @_s.JsonKey(name: 'rulesPackages')
  final List<RulesPackage> rulesPackages;

  DescribeRulesPackagesResponse({
    @_s.required this.failedItems,
    @_s.required this.rulesPackages,
  });
  factory DescribeRulesPackagesResponse.fromJson(Map<String, dynamic> json) =>
      _$DescribeRulesPackagesResponseFromJson(json);
}

/// This data type is used in the <a>AssessmentTemplateFilter</a> data type.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: false,
    createToJson: true)
class DurationRange {
  /// The maximum value of the duration range. Must be less than or equal to
  /// 604800 seconds (1 week).
  @_s.JsonKey(name: 'maxSeconds')
  final int maxSeconds;

  /// The minimum value of the duration range. Must be greater than zero.
  @_s.JsonKey(name: 'minSeconds')
  final int minSeconds;

  DurationRange({
    this.maxSeconds,
    this.minSeconds,
  });
  Map<String, dynamic> toJson() => _$DurationRangeToJson(this);
}

/// This data type is used in the <a>Subscription</a> data type.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class EventSubscription {
  /// The event for which Amazon Simple Notification Service (SNS) notifications
  /// are sent.
  @_s.JsonKey(name: 'event')
  final InspectorEvent event;

  /// The time at which <a>SubscribeToEvent</a> is called.
  @UnixDateTimeConverter()
  @_s.JsonKey(name: 'subscribedAt')
  final DateTime subscribedAt;

  EventSubscription({
    @_s.required this.event,
    @_s.required this.subscribedAt,
  });
  factory EventSubscription.fromJson(Map<String, dynamic> json) =>
      _$EventSubscriptionFromJson(json);
}

/// Contains information about what was excluded from an assessment run.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class Exclusion {
  /// The ARN that specifies the exclusion.
  @_s.JsonKey(name: 'arn')
  final String arn;

  /// The description of the exclusion.
  @_s.JsonKey(name: 'description')
  final String description;

  /// The recommendation for the exclusion.
  @_s.JsonKey(name: 'recommendation')
  final String recommendation;

  /// The AWS resources for which the exclusion pertains.
  @_s.JsonKey(name: 'scopes')
  final List<Scope> scopes;

  /// The name of the exclusion.
  @_s.JsonKey(name: 'title')
  final String title;

  /// The system-defined attributes for the exclusion.
  @_s.JsonKey(name: 'attributes')
  final List<Attribute> attributes;

  Exclusion({
    @_s.required this.arn,
    @_s.required this.description,
    @_s.required this.recommendation,
    @_s.required this.scopes,
    @_s.required this.title,
    this.attributes,
  });
  factory Exclusion.fromJson(Map<String, dynamic> json) =>
      _$ExclusionFromJson(json);
}

/// Contains information about what is excluded from an assessment run given the
/// current state of the assessment template.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class ExclusionPreview {
  /// The description of the exclusion preview.
  @_s.JsonKey(name: 'description')
  final String description;

  /// The recommendation for the exclusion preview.
  @_s.JsonKey(name: 'recommendation')
  final String recommendation;

  /// The AWS resources for which the exclusion preview pertains.
  @_s.JsonKey(name: 'scopes')
  final List<Scope> scopes;

  /// The name of the exclusion preview.
  @_s.JsonKey(name: 'title')
  final String title;

  /// The system-defined attributes for the exclusion preview.
  @_s.JsonKey(name: 'attributes')
  final List<Attribute> attributes;

  ExclusionPreview({
    @_s.required this.description,
    @_s.required this.recommendation,
    @_s.required this.scopes,
    @_s.required this.title,
    this.attributes,
  });
  factory ExclusionPreview.fromJson(Map<String, dynamic> json) =>
      _$ExclusionPreviewFromJson(json);
}

/// Includes details about the failed items.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class FailedItemDetails {
  /// The status code of a failed item.
  @_s.JsonKey(name: 'failureCode')
  final FailedItemErrorCode failureCode;

  /// Indicates whether you can immediately retry a request for this item for a
  /// specified resource.
  @_s.JsonKey(name: 'retryable')
  final bool retryable;

  FailedItemDetails({
    @_s.required this.failureCode,
    @_s.required this.retryable,
  });
  factory FailedItemDetails.fromJson(Map<String, dynamic> json) =>
      _$FailedItemDetailsFromJson(json);
}

enum FailedItemErrorCode {
  @_s.JsonValue('INVALID_ARN')
  invalidArn,
  @_s.JsonValue('DUPLICATE_ARN')
  duplicateArn,
  @_s.JsonValue('ITEM_DOES_NOT_EXIST')
  itemDoesNotExist,
  @_s.JsonValue('ACCESS_DENIED')
  accessDenied,
  @_s.JsonValue('LIMIT_EXCEEDED')
  limitExceeded,
  @_s.JsonValue('INTERNAL_ERROR')
  internalError,
}

/// Contains information about an Amazon Inspector finding. This data type is
/// used as the response element in the <a>DescribeFindings</a> action.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class Finding {
  /// The ARN that specifies the finding.
  @_s.JsonKey(name: 'arn')
  final String arn;

  /// The system-defined attributes for the finding.
  @_s.JsonKey(name: 'attributes')
  final List<Attribute> attributes;

  /// The time when the finding was generated.
  @UnixDateTimeConverter()
  @_s.JsonKey(name: 'createdAt')
  final DateTime createdAt;

  /// The time when <a>AddAttributesToFindings</a> is called.
  @UnixDateTimeConverter()
  @_s.JsonKey(name: 'updatedAt')
  final DateTime updatedAt;

  /// The user-defined attributes that are assigned to the finding.
  @_s.JsonKey(name: 'userAttributes')
  final List<Attribute> userAttributes;

  /// A collection of attributes of the host from which the finding is generated.
  @_s.JsonKey(name: 'assetAttributes')
  final AssetAttributes assetAttributes;

  /// The type of the host from which the finding is generated.
  @_s.JsonKey(name: 'assetType')
  final AssetType assetType;

  /// This data element is currently not used.
  @_s.JsonKey(name: 'confidence')
  final int confidence;

  /// The description of the finding.
  @_s.JsonKey(name: 'description')
  final String description;

  /// The ID of the finding.
  @_s.JsonKey(name: 'id')
  final String id;

  /// This data element is currently not used.
  @_s.JsonKey(name: 'indicatorOfCompromise')
  final bool indicatorOfCompromise;

  /// The numeric value of the finding severity.
  @_s.JsonKey(name: 'numericSeverity')
  final double numericSeverity;

  /// The recommendation for the finding.
  @_s.JsonKey(name: 'recommendation')
  final String recommendation;

  /// The schema version of this data type.
  @_s.JsonKey(name: 'schemaVersion')
  final int schemaVersion;

  /// The data element is set to "Inspector".
  @_s.JsonKey(name: 'service')
  final String service;

  /// This data type is used in the <a>Finding</a> data type.
  @_s.JsonKey(name: 'serviceAttributes')
  final InspectorServiceAttributes serviceAttributes;

  /// The finding severity. Values can be set to High, Medium, Low, and
  /// Informational.
  @_s.JsonKey(name: 'severity')
  final Severity severity;

  /// The name of the finding.
  @_s.JsonKey(name: 'title')
  final String title;

  Finding({
    @_s.required this.arn,
    @_s.required this.attributes,
    @_s.required this.createdAt,
    @_s.required this.updatedAt,
    @_s.required this.userAttributes,
    this.assetAttributes,
    this.assetType,
    this.confidence,
    this.description,
    this.id,
    this.indicatorOfCompromise,
    this.numericSeverity,
    this.recommendation,
    this.schemaVersion,
    this.service,
    this.serviceAttributes,
    this.severity,
    this.title,
  });
  factory Finding.fromJson(Map<String, dynamic> json) =>
      _$FindingFromJson(json);
}

/// This data type is used as a request parameter in the <a>ListFindings</a>
/// action.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: false,
    createToJson: true)
class FindingFilter {
  /// For a record to match a filter, one of the values that is specified for this
  /// data type property must be the exact match of the value of the
  /// <b>agentId</b> property of the <a>Finding</a> data type.
  @_s.JsonKey(name: 'agentIds')
  final List<String> agentIds;

  /// For a record to match a filter, the list of values that are specified for
  /// this data type property must be contained in the list of values of the
  /// <b>attributes</b> property of the <a>Finding</a> data type.
  @_s.JsonKey(name: 'attributes')
  final List<Attribute> attributes;

  /// For a record to match a filter, one of the values that is specified for this
  /// data type property must be the exact match of the value of the
  /// <b>autoScalingGroup</b> property of the <a>Finding</a> data type.
  @_s.JsonKey(name: 'autoScalingGroups')
  final List<String> autoScalingGroups;

  /// The time range during which the finding is generated.
  @_s.JsonKey(name: 'creationTimeRange')
  final TimestampRange creationTimeRange;

  /// For a record to match a filter, one of the values that is specified for this
  /// data type property must be the exact match of the value of the
  /// <b>ruleName</b> property of the <a>Finding</a> data type.
  @_s.JsonKey(name: 'ruleNames')
  final List<String> ruleNames;

  /// For a record to match a filter, one of the values that is specified for this
  /// data type property must be the exact match of the value of the
  /// <b>rulesPackageArn</b> property of the <a>Finding</a> data type.
  @_s.JsonKey(name: 'rulesPackageArns')
  final List<String> rulesPackageArns;

  /// For a record to match a filter, one of the values that is specified for this
  /// data type property must be the exact match of the value of the
  /// <b>severity</b> property of the <a>Finding</a> data type.
  @_s.JsonKey(name: 'severities')
  final List<Severity> severities;

  /// For a record to match a filter, the value that is specified for this data
  /// type property must be contained in the list of values of the
  /// <b>userAttributes</b> property of the <a>Finding</a> data type.
  @_s.JsonKey(name: 'userAttributes')
  final List<Attribute> userAttributes;

  FindingFilter({
    this.agentIds,
    this.attributes,
    this.autoScalingGroups,
    this.creationTimeRange,
    this.ruleNames,
    this.rulesPackageArns,
    this.severities,
    this.userAttributes,
  });
  Map<String, dynamic> toJson() => _$FindingFilterToJson(this);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class GetAssessmentReportResponse {
  /// Specifies the status of the request to generate an assessment report.
  @_s.JsonKey(name: 'status')
  final ReportStatus status;

  /// Specifies the URL where you can find the generated assessment report. This
  /// parameter is only returned if the report is successfully generated.
  @_s.JsonKey(name: 'url')
  final String url;

  GetAssessmentReportResponse({
    @_s.required this.status,
    this.url,
  });
  factory GetAssessmentReportResponse.fromJson(Map<String, dynamic> json) =>
      _$GetAssessmentReportResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class GetExclusionsPreviewResponse {
  /// Specifies the status of the request to generate an exclusions preview.
  @_s.JsonKey(name: 'previewStatus')
  final PreviewStatus previewStatus;

  /// Information about the exclusions included in the preview.
  @_s.JsonKey(name: 'exclusionPreviews')
  final List<ExclusionPreview> exclusionPreviews;

  /// When a response is generated, if there is more data to be listed, this
  /// parameters is present in the response and contains the value to use for the
  /// nextToken parameter in a subsequent pagination request. If there is no more
  /// data to be listed, this parameter is set to null.
  @_s.JsonKey(name: 'nextToken')
  final String nextToken;

  GetExclusionsPreviewResponse({
    @_s.required this.previewStatus,
    this.exclusionPreviews,
    this.nextToken,
  });
  factory GetExclusionsPreviewResponse.fromJson(Map<String, dynamic> json) =>
      _$GetExclusionsPreviewResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class GetTelemetryMetadataResponse {
  /// Telemetry details.
  @_s.JsonKey(name: 'telemetryMetadata')
  final List<TelemetryMetadata> telemetryMetadata;

  GetTelemetryMetadataResponse({
    @_s.required this.telemetryMetadata,
  });
  factory GetTelemetryMetadataResponse.fromJson(Map<String, dynamic> json) =>
      _$GetTelemetryMetadataResponseFromJson(json);
}

enum InspectorEvent {
  @_s.JsonValue('ASSESSMENT_RUN_STARTED')
  assessmentRunStarted,
  @_s.JsonValue('ASSESSMENT_RUN_COMPLETED')
  assessmentRunCompleted,
  @_s.JsonValue('ASSESSMENT_RUN_STATE_CHANGED')
  assessmentRunStateChanged,
  @_s.JsonValue('FINDING_REPORTED')
  findingReported,
  @_s.JsonValue('OTHER')
  other,
}

extension on InspectorEvent {
  String toValue() {
    switch (this) {
      case InspectorEvent.assessmentRunStarted:
        return 'ASSESSMENT_RUN_STARTED';
      case InspectorEvent.assessmentRunCompleted:
        return 'ASSESSMENT_RUN_COMPLETED';
      case InspectorEvent.assessmentRunStateChanged:
        return 'ASSESSMENT_RUN_STATE_CHANGED';
      case InspectorEvent.findingReported:
        return 'FINDING_REPORTED';
      case InspectorEvent.other:
        return 'OTHER';
    }
    throw Exception('Unknown enum value: $this');
  }
}

/// This data type is used in the <a>Finding</a> data type.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class InspectorServiceAttributes {
  /// The schema version of this data type.
  @_s.JsonKey(name: 'schemaVersion')
  final int schemaVersion;

  /// The ARN of the assessment run during which the finding is generated.
  @_s.JsonKey(name: 'assessmentRunArn')
  final String assessmentRunArn;

  /// The ARN of the rules package that is used to generate the finding.
  @_s.JsonKey(name: 'rulesPackageArn')
  final String rulesPackageArn;

  InspectorServiceAttributes({
    @_s.required this.schemaVersion,
    this.assessmentRunArn,
    this.rulesPackageArn,
  });
  factory InspectorServiceAttributes.fromJson(Map<String, dynamic> json) =>
      _$InspectorServiceAttributesFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class ListAssessmentRunAgentsResponse {
  /// A list of ARNs that specifies the agents returned by the action.
  @_s.JsonKey(name: 'assessmentRunAgents')
  final List<AssessmentRunAgent> assessmentRunAgents;

  /// When a response is generated, if there is more data to be listed, this
  /// parameter is present in the response and contains the value to use for the
  /// <b>nextToken</b> parameter in a subsequent pagination request. If there is
  /// no more data to be listed, this parameter is set to null.
  @_s.JsonKey(name: 'nextToken')
  final String nextToken;

  ListAssessmentRunAgentsResponse({
    @_s.required this.assessmentRunAgents,
    this.nextToken,
  });
  factory ListAssessmentRunAgentsResponse.fromJson(Map<String, dynamic> json) =>
      _$ListAssessmentRunAgentsResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class ListAssessmentRunsResponse {
  /// A list of ARNs that specifies the assessment runs that are returned by the
  /// action.
  @_s.JsonKey(name: 'assessmentRunArns')
  final List<String> assessmentRunArns;

  /// When a response is generated, if there is more data to be listed, this
  /// parameter is present in the response and contains the value to use for the
  /// <b>nextToken</b> parameter in a subsequent pagination request. If there is
  /// no more data to be listed, this parameter is set to null.
  @_s.JsonKey(name: 'nextToken')
  final String nextToken;

  ListAssessmentRunsResponse({
    @_s.required this.assessmentRunArns,
    this.nextToken,
  });
  factory ListAssessmentRunsResponse.fromJson(Map<String, dynamic> json) =>
      _$ListAssessmentRunsResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class ListAssessmentTargetsResponse {
  /// A list of ARNs that specifies the assessment targets that are returned by
  /// the action.
  @_s.JsonKey(name: 'assessmentTargetArns')
  final List<String> assessmentTargetArns;

  /// When a response is generated, if there is more data to be listed, this
  /// parameter is present in the response and contains the value to use for the
  /// <b>nextToken</b> parameter in a subsequent pagination request. If there is
  /// no more data to be listed, this parameter is set to null.
  @_s.JsonKey(name: 'nextToken')
  final String nextToken;

  ListAssessmentTargetsResponse({
    @_s.required this.assessmentTargetArns,
    this.nextToken,
  });
  factory ListAssessmentTargetsResponse.fromJson(Map<String, dynamic> json) =>
      _$ListAssessmentTargetsResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class ListAssessmentTemplatesResponse {
  /// A list of ARNs that specifies the assessment templates returned by the
  /// action.
  @_s.JsonKey(name: 'assessmentTemplateArns')
  final List<String> assessmentTemplateArns;

  /// When a response is generated, if there is more data to be listed, this
  /// parameter is present in the response and contains the value to use for the
  /// <b>nextToken</b> parameter in a subsequent pagination request. If there is
  /// no more data to be listed, this parameter is set to null.
  @_s.JsonKey(name: 'nextToken')
  final String nextToken;

  ListAssessmentTemplatesResponse({
    @_s.required this.assessmentTemplateArns,
    this.nextToken,
  });
  factory ListAssessmentTemplatesResponse.fromJson(Map<String, dynamic> json) =>
      _$ListAssessmentTemplatesResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class ListEventSubscriptionsResponse {
  /// Details of the returned event subscriptions.
  @_s.JsonKey(name: 'subscriptions')
  final List<Subscription> subscriptions;

  /// When a response is generated, if there is more data to be listed, this
  /// parameter is present in the response and contains the value to use for the
  /// <b>nextToken</b> parameter in a subsequent pagination request. If there is
  /// no more data to be listed, this parameter is set to null.
  @_s.JsonKey(name: 'nextToken')
  final String nextToken;

  ListEventSubscriptionsResponse({
    @_s.required this.subscriptions,
    this.nextToken,
  });
  factory ListEventSubscriptionsResponse.fromJson(Map<String, dynamic> json) =>
      _$ListEventSubscriptionsResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class ListExclusionsResponse {
  /// A list of exclusions' ARNs returned by the action.
  @_s.JsonKey(name: 'exclusionArns')
  final List<String> exclusionArns;

  /// When a response is generated, if there is more data to be listed, this
  /// parameters is present in the response and contains the value to use for the
  /// nextToken parameter in a subsequent pagination request. If there is no more
  /// data to be listed, this parameter is set to null.
  @_s.JsonKey(name: 'nextToken')
  final String nextToken;

  ListExclusionsResponse({
    @_s.required this.exclusionArns,
    this.nextToken,
  });
  factory ListExclusionsResponse.fromJson(Map<String, dynamic> json) =>
      _$ListExclusionsResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class ListFindingsResponse {
  /// A list of ARNs that specifies the findings returned by the action.
  @_s.JsonKey(name: 'findingArns')
  final List<String> findingArns;

  /// When a response is generated, if there is more data to be listed, this
  /// parameter is present in the response and contains the value to use for the
  /// <b>nextToken</b> parameter in a subsequent pagination request. If there is
  /// no more data to be listed, this parameter is set to null.
  @_s.JsonKey(name: 'nextToken')
  final String nextToken;

  ListFindingsResponse({
    @_s.required this.findingArns,
    this.nextToken,
  });
  factory ListFindingsResponse.fromJson(Map<String, dynamic> json) =>
      _$ListFindingsResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class ListRulesPackagesResponse {
  /// The list of ARNs that specifies the rules packages returned by the action.
  @_s.JsonKey(name: 'rulesPackageArns')
  final List<String> rulesPackageArns;

  /// When a response is generated, if there is more data to be listed, this
  /// parameter is present in the response and contains the value to use for the
  /// <b>nextToken</b> parameter in a subsequent pagination request. If there is
  /// no more data to be listed, this parameter is set to null.
  @_s.JsonKey(name: 'nextToken')
  final String nextToken;

  ListRulesPackagesResponse({
    @_s.required this.rulesPackageArns,
    this.nextToken,
  });
  factory ListRulesPackagesResponse.fromJson(Map<String, dynamic> json) =>
      _$ListRulesPackagesResponseFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class ListTagsForResourceResponse {
  /// A collection of key and value pairs.
  @_s.JsonKey(name: 'tags')
  final List<Tag> tags;

  ListTagsForResourceResponse({
    @_s.required this.tags,
  });
  factory ListTagsForResourceResponse.fromJson(Map<String, dynamic> json) =>
      _$ListTagsForResourceResponseFromJson(json);
}

enum Locale {
  @_s.JsonValue('EN_US')
  enUs,
}

extension on Locale {
  String toValue() {
    switch (this) {
      case Locale.enUs:
        return 'EN_US';
    }
    throw Exception('Unknown enum value: $this');
  }
}

/// Contains information about the network interfaces interacting with an EC2
/// instance. This data type is used as one of the elements of the
/// <a>AssetAttributes</a> data type.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class NetworkInterface {
  /// The IP addresses associated with the network interface.
  @_s.JsonKey(name: 'ipv6Addresses')
  final List<String> ipv6Addresses;

  /// The ID of the network interface.
  @_s.JsonKey(name: 'networkInterfaceId')
  final String networkInterfaceId;

  /// The name of a private DNS associated with the network interface.
  @_s.JsonKey(name: 'privateDnsName')
  final String privateDnsName;

  /// The private IP address associated with the network interface.
  @_s.JsonKey(name: 'privateIpAddress')
  final String privateIpAddress;

  /// A list of the private IP addresses associated with the network interface.
  /// Includes the privateDnsName and privateIpAddress.
  @_s.JsonKey(name: 'privateIpAddresses')
  final List<PrivateIp> privateIpAddresses;

  /// The name of a public DNS associated with the network interface.
  @_s.JsonKey(name: 'publicDnsName')
  final String publicDnsName;

  /// The public IP address from which the network interface is reachable.
  @_s.JsonKey(name: 'publicIp')
  final String publicIp;

  /// A list of the security groups associated with the network interface.
  /// Includes the groupId and groupName.
  @_s.JsonKey(name: 'securityGroups')
  final List<SecurityGroup> securityGroups;

  /// The ID of a subnet associated with the network interface.
  @_s.JsonKey(name: 'subnetId')
  final String subnetId;

  /// The ID of a VPC associated with the network interface.
  @_s.JsonKey(name: 'vpcId')
  final String vpcId;

  NetworkInterface({
    this.ipv6Addresses,
    this.networkInterfaceId,
    this.privateDnsName,
    this.privateIpAddress,
    this.privateIpAddresses,
    this.publicDnsName,
    this.publicIp,
    this.securityGroups,
    this.subnetId,
    this.vpcId,
  });
  factory NetworkInterface.fromJson(Map<String, dynamic> json) =>
      _$NetworkInterfaceFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class PreviewAgentsResponse {
  /// The resulting list of agents.
  @_s.JsonKey(name: 'agentPreviews')
  final List<AgentPreview> agentPreviews;

  /// When a response is generated, if there is more data to be listed, this
  /// parameter is present in the response and contains the value to use for the
  /// <b>nextToken</b> parameter in a subsequent pagination request. If there is
  /// no more data to be listed, this parameter is set to null.
  @_s.JsonKey(name: 'nextToken')
  final String nextToken;

  PreviewAgentsResponse({
    @_s.required this.agentPreviews,
    this.nextToken,
  });
  factory PreviewAgentsResponse.fromJson(Map<String, dynamic> json) =>
      _$PreviewAgentsResponseFromJson(json);
}

enum PreviewStatus {
  @_s.JsonValue('WORK_IN_PROGRESS')
  workInProgress,
  @_s.JsonValue('COMPLETED')
  completed,
}

/// Contains information about a private IP address associated with a network
/// interface. This data type is used as a response element in the
/// <a>DescribeFindings</a> action.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class PrivateIp {
  /// The DNS name of the private IP address.
  @_s.JsonKey(name: 'privateDnsName')
  final String privateDnsName;

  /// The full IP address of the network inteface.
  @_s.JsonKey(name: 'privateIpAddress')
  final String privateIpAddress;

  PrivateIp({
    this.privateDnsName,
    this.privateIpAddress,
  });
  factory PrivateIp.fromJson(Map<String, dynamic> json) =>
      _$PrivateIpFromJson(json);
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class RemoveAttributesFromFindingsResponse {
  /// Attributes details that cannot be described. An error code is provided for
  /// each failed item.
  @_s.JsonKey(name: 'failedItems')
  final Map<String, FailedItemDetails> failedItems;

  RemoveAttributesFromFindingsResponse({
    @_s.required this.failedItems,
  });
  factory RemoveAttributesFromFindingsResponse.fromJson(
          Map<String, dynamic> json) =>
      _$RemoveAttributesFromFindingsResponseFromJson(json);
}

enum ReportFileFormat {
  @_s.JsonValue('HTML')
  html,
  @_s.JsonValue('PDF')
  pdf,
}

extension on ReportFileFormat {
  String toValue() {
    switch (this) {
      case ReportFileFormat.html:
        return 'HTML';
      case ReportFileFormat.pdf:
        return 'PDF';
    }
    throw Exception('Unknown enum value: $this');
  }
}

enum ReportStatus {
  @_s.JsonValue('WORK_IN_PROGRESS')
  workInProgress,
  @_s.JsonValue('FAILED')
  failed,
  @_s.JsonValue('COMPLETED')
  completed,
}

enum ReportType {
  @_s.JsonValue('FINDING')
  finding,
  @_s.JsonValue('FULL')
  full,
}

extension on ReportType {
  String toValue() {
    switch (this) {
      case ReportType.finding:
        return 'FINDING';
      case ReportType.full:
        return 'FULL';
    }
    throw Exception('Unknown enum value: $this');
  }
}

/// Contains information about a resource group. The resource group defines a
/// set of tags that, when queried, identify the AWS resources that make up the
/// assessment target. This data type is used as the response element in the
/// <a>DescribeResourceGroups</a> action.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class ResourceGroup {
  /// The ARN of the resource group.
  @_s.JsonKey(name: 'arn')
  final String arn;

  /// The time at which resource group is created.
  @UnixDateTimeConverter()
  @_s.JsonKey(name: 'createdAt')
  final DateTime createdAt;

  /// The tags (key and value pairs) of the resource group. This data type
  /// property is used in the <a>CreateResourceGroup</a> action.
  @_s.JsonKey(name: 'tags')
  final List<ResourceGroupTag> tags;

  ResourceGroup({
    @_s.required this.arn,
    @_s.required this.createdAt,
    @_s.required this.tags,
  });
  factory ResourceGroup.fromJson(Map<String, dynamic> json) =>
      _$ResourceGroupFromJson(json);
}

/// This data type is used as one of the elements of the <a>ResourceGroup</a>
/// data type.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: true)
class ResourceGroupTag {
  /// A tag key.
  @_s.JsonKey(name: 'key')
  final String key;

  /// The value assigned to a tag key.
  @_s.JsonKey(name: 'value')
  final String value;

  ResourceGroupTag({
    @_s.required this.key,
    this.value,
  });
  factory ResourceGroupTag.fromJson(Map<String, dynamic> json) =>
      _$ResourceGroupTagFromJson(json);

  Map<String, dynamic> toJson() => _$ResourceGroupTagToJson(this);
}

/// Contains information about an Amazon Inspector rules package. This data type
/// is used as the response element in the <a>DescribeRulesPackages</a> action.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class RulesPackage {
  /// The ARN of the rules package.
  @_s.JsonKey(name: 'arn')
  final String arn;

  /// The name of the rules package.
  @_s.JsonKey(name: 'name')
  final String name;

  /// The provider of the rules package.
  @_s.JsonKey(name: 'provider')
  final String provider;

  /// The version ID of the rules package.
  @_s.JsonKey(name: 'version')
  final String version;

  /// The description of the rules package.
  @_s.JsonKey(name: 'description')
  final String description;

  RulesPackage({
    @_s.required this.arn,
    @_s.required this.name,
    @_s.required this.provider,
    @_s.required this.version,
    this.description,
  });
  factory RulesPackage.fromJson(Map<String, dynamic> json) =>
      _$RulesPackageFromJson(json);
}

/// This data type contains key-value pairs that identify various Amazon
/// resources.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class Scope {
  /// The type of the scope.
  @_s.JsonKey(name: 'key')
  final ScopeType key;

  /// The resource identifier for the specified scope type.
  @_s.JsonKey(name: 'value')
  final String value;

  Scope({
    this.key,
    this.value,
  });
  factory Scope.fromJson(Map<String, dynamic> json) => _$ScopeFromJson(json);
}

enum ScopeType {
  @_s.JsonValue('INSTANCE_ID')
  instanceId,
  @_s.JsonValue('RULES_PACKAGE_ARN')
  rulesPackageArn,
}

/// Contains information about a security group associated with a network
/// interface. This data type is used as one of the elements of the
/// <a>NetworkInterface</a> data type.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class SecurityGroup {
  /// The ID of the security group.
  @_s.JsonKey(name: 'groupId')
  final String groupId;

  /// The name of the security group.
  @_s.JsonKey(name: 'groupName')
  final String groupName;

  SecurityGroup({
    this.groupId,
    this.groupName,
  });
  factory SecurityGroup.fromJson(Map<String, dynamic> json) =>
      _$SecurityGroupFromJson(json);
}

enum Severity {
  @_s.JsonValue('Low')
  low,
  @_s.JsonValue('Medium')
  medium,
  @_s.JsonValue('High')
  high,
  @_s.JsonValue('Informational')
  informational,
  @_s.JsonValue('Undefined')
  undefined,
}

@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class StartAssessmentRunResponse {
  /// The ARN of the assessment run that has been started.
  @_s.JsonKey(name: 'assessmentRunArn')
  final String assessmentRunArn;

  StartAssessmentRunResponse({
    @_s.required this.assessmentRunArn,
  });
  factory StartAssessmentRunResponse.fromJson(Map<String, dynamic> json) =>
      _$StartAssessmentRunResponseFromJson(json);
}

enum StopAction {
  @_s.JsonValue('START_EVALUATION')
  startEvaluation,
  @_s.JsonValue('SKIP_EVALUATION')
  skipEvaluation,
}

extension on StopAction {
  String toValue() {
    switch (this) {
      case StopAction.startEvaluation:
        return 'START_EVALUATION';
      case StopAction.skipEvaluation:
        return 'SKIP_EVALUATION';
    }
    throw Exception('Unknown enum value: $this');
  }
}

/// This data type is used as a response element in the
/// <a>ListEventSubscriptions</a> action.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class Subscription {
  /// The list of existing event subscriptions.
  @_s.JsonKey(name: 'eventSubscriptions')
  final List<EventSubscription> eventSubscriptions;

  /// The ARN of the assessment template that is used during the event for which
  /// the SNS notification is sent.
  @_s.JsonKey(name: 'resourceArn')
  final String resourceArn;

  /// The ARN of the Amazon Simple Notification Service (SNS) topic to which the
  /// SNS notifications are sent.
  @_s.JsonKey(name: 'topicArn')
  final String topicArn;

  Subscription({
    @_s.required this.eventSubscriptions,
    @_s.required this.resourceArn,
    @_s.required this.topicArn,
  });
  factory Subscription.fromJson(Map<String, dynamic> json) =>
      _$SubscriptionFromJson(json);
}

/// A key and value pair. This data type is used as a request parameter in the
/// <a>SetTagsForResource</a> action and a response element in the
/// <a>ListTagsForResource</a> action.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: true)
class Tag {
  /// A tag key.
  @_s.JsonKey(name: 'key')
  final String key;

  /// A value assigned to a tag key.
  @_s.JsonKey(name: 'value')
  final String value;

  Tag({
    @_s.required this.key,
    this.value,
  });
  factory Tag.fromJson(Map<String, dynamic> json) => _$TagFromJson(json);

  Map<String, dynamic> toJson() => _$TagToJson(this);
}

/// The metadata about the Amazon Inspector application data metrics collected
/// by the agent. This data type is used as the response element in the
/// <a>GetTelemetryMetadata</a> action.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: true,
    createToJson: false)
class TelemetryMetadata {
  /// The count of messages that the agent sends to the Amazon Inspector service.
  @_s.JsonKey(name: 'count')
  final int count;

  /// A specific type of behavioral data that is collected by the agent.
  @_s.JsonKey(name: 'messageType')
  final String messageType;

  /// The data size of messages that the agent sends to the Amazon Inspector
  /// service.
  @_s.JsonKey(name: 'dataSize')
  final int dataSize;

  TelemetryMetadata({
    @_s.required this.count,
    @_s.required this.messageType,
    this.dataSize,
  });
  factory TelemetryMetadata.fromJson(Map<String, dynamic> json) =>
      _$TelemetryMetadataFromJson(json);
}

/// This data type is used in the <a>AssessmentRunFilter</a> data type.
@_s.JsonSerializable(
    includeIfNull: false,
    explicitToJson: true,
    createFactory: false,
    createToJson: true)
class TimestampRange {
  /// The minimum value of the timestamp range.
  @UnixDateTimeConverter()
  @_s.JsonKey(name: 'beginDate')
  final DateTime beginDate;

  /// The maximum value of the timestamp range.
  @UnixDateTimeConverter()
  @_s.JsonKey(name: 'endDate')
  final DateTime endDate;

  TimestampRange({
    this.beginDate,
    this.endDate,
  });
  Map<String, dynamic> toJson() => _$TimestampRangeToJson(this);
}

class AccessDeniedException extends _s.GenericAwsException {
  AccessDeniedException({String type, String message})
      : super(type: type, code: 'AccessDeniedException', message: message);
}

class AgentsAlreadyRunningAssessmentException extends _s.GenericAwsException {
  AgentsAlreadyRunningAssessmentException({String type, String message})
      : super(
            type: type,
            code: 'AgentsAlreadyRunningAssessmentException',
            message: message);
}

class AssessmentRunInProgressException extends _s.GenericAwsException {
  AssessmentRunInProgressException({String type, String message})
      : super(
            type: type,
            code: 'AssessmentRunInProgressException',
            message: message);
}

class InternalException extends _s.GenericAwsException {
  InternalException({String type, String message})
      : super(type: type, code: 'InternalException', message: message);
}

class InvalidCrossAccountRoleException extends _s.GenericAwsException {
  InvalidCrossAccountRoleException({String type, String message})
      : super(
            type: type,
            code: 'InvalidCrossAccountRoleException',
            message: message);
}

class InvalidInputException extends _s.GenericAwsException {
  InvalidInputException({String type, String message})
      : super(type: type, code: 'InvalidInputException', message: message);
}

class LimitExceededException extends _s.GenericAwsException {
  LimitExceededException({String type, String message})
      : super(type: type, code: 'LimitExceededException', message: message);
}

class NoSuchEntityException extends _s.GenericAwsException {
  NoSuchEntityException({String type, String message})
      : super(type: type, code: 'NoSuchEntityException', message: message);
}

class PreviewGenerationInProgressException extends _s.GenericAwsException {
  PreviewGenerationInProgressException({String type, String message})
      : super(
            type: type,
            code: 'PreviewGenerationInProgressException',
            message: message);
}

class ServiceTemporarilyUnavailableException extends _s.GenericAwsException {
  ServiceTemporarilyUnavailableException({String type, String message})
      : super(
            type: type,
            code: 'ServiceTemporarilyUnavailableException',
            message: message);
}

class UnsupportedFeatureException extends _s.GenericAwsException {
  UnsupportedFeatureException({String type, String message})
      : super(
            type: type, code: 'UnsupportedFeatureException', message: message);
}

final _exceptionFns = <String, _s.AwsExceptionFn>{
  'AccessDeniedException': (type, message) =>
      AccessDeniedException(type: type, message: message),
  'AgentsAlreadyRunningAssessmentException': (type, message) =>
      AgentsAlreadyRunningAssessmentException(type: type, message: message),
  'AssessmentRunInProgressException': (type, message) =>
      AssessmentRunInProgressException(type: type, message: message),
  'InternalException': (type, message) =>
      InternalException(type: type, message: message),
  'InvalidCrossAccountRoleException': (type, message) =>
      InvalidCrossAccountRoleException(type: type, message: message),
  'InvalidInputException': (type, message) =>
      InvalidInputException(type: type, message: message),
  'LimitExceededException': (type, message) =>
      LimitExceededException(type: type, message: message),
  'NoSuchEntityException': (type, message) =>
      NoSuchEntityException(type: type, message: message),
  'PreviewGenerationInProgressException': (type, message) =>
      PreviewGenerationInProgressException(type: type, message: message),
  'ServiceTemporarilyUnavailableException': (type, message) =>
      ServiceTemporarilyUnavailableException(type: type, message: message),
  'UnsupportedFeatureException': (type, message) =>
      UnsupportedFeatureException(type: type, message: message),
};
