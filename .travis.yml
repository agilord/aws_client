# Created with package:mono_repo v3.4.3
language: dart

jobs:
  include:
    - stage: smoke_test
      name: "PKG: aws_client; `dartfmt -n --set-exit-if-changed .`, `dartanalyzer --fatal-infos --fatal-warnings .`"
      dart: stable
      os: linux
      env: PKGS="aws_client"
      script: tool/ci.sh dartfmt dartanalyzer
    - stage: smoke_test
      name: "PKG: document_client; `dartfmt -n --set-exit-if-changed .`, `dartanalyzer --fatal-infos --fatal-warnings .`"
      dart: stable
      os: linux
      env: PKGS="document_client"
      script: tool/ci.sh dartfmt dartanalyzer
    - stage: smoke_test
      name: "PKG: generator; `dartfmt -n --set-exit-if-changed .`, `dartanalyzer --fatal-infos --fatal-warnings .`"
      dart: stable
      os: linux
      env: PKGS="generator"
      script: tool/ci.sh dartfmt dartanalyzer
    - stage: smoke_test
      name: "PKG: shared_aws_api; `dartfmt -n --set-exit-if-changed .`, `dartanalyzer --fatal-infos --fatal-warnings .`"
      dart: stable
      os: linux
      env: PKGS="shared_aws_api"
      script: tool/ci.sh dartfmt dartanalyzer
    - stage: unit_test
      name: "PKG: document_client; `pub run test -j 1 --run-skipped`"
      dart: stable
      os: linux
      env: PKGS="document_client"
      script: tool/ci.sh test_0
    - stage: unit_test
      name: "PKG: generator; `pub run test -j 1 --run-skipped`"
      dart: stable
      os: linux
      env: PKGS="generator"
      script: tool/ci.sh test_0
    - stage: unit_test
      name: "PKG: shared_aws_api; `pub run test -j 1`"
      dart: stable
      os: linux
      env: PKGS="shared_aws_api"
      script: tool/ci.sh test_1

stages:
  - smoke_test
  - unit_test

# Only building master means that we don't run two builds for each pull request.
branches:
  only:
    - master

cache:
  directories:
    - $HOME/.pub-cache
